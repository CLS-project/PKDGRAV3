################################################################################
# All pkdgrav3 parameters
#   Each key is divided into a section and a parameter name. Parameter names
#   must be globally unique.
#
#   Fields:
#     flag:    the command line flag used to override the parameter
#     default: the default value. NB: The type of "default" determines the
#              type of the parameter. String, int, float or Boolean.
#              A list type can be specified in one of three ways:
#                []      - generic object returned (does not have to be a list)
#                [1,1,1] - returns a TinyVector of exactly this length.
#                          Types must be identical for all elements.
#                [1.0]   - Returns a std::vector of the given type.
#                          The default is empty (value is used only for the type)
#     omitted: The "default" value if the parameter is ommited if it is
#              different from "default". Parsed as restructured text.
#              Needs to be small to fit beside the parameter (default whatever)
#              (see dHubble0 for an advanced example).
#     help:    the short string included with "pkdgrav3 --help"
#     docs:    Detailed documentation about the parameter that is included in
#              the User Guide. Parsed as restructured text. (see e.g. dTheta)
#
#   Subsections can be created to organize the parameters in the User Guide.
#   See the "Force Accuracy" section for an example. Due to limitations of
#   argparse, the parameters are only grouped by the main heading (for --help).
#
################################################################################

################################################################################
########## Gravity, Domains, Trees
################################################################################
["Gravity, Domains, Trees"]
docs='''
Parameters in this section are used to override the gravitational softening
:math:`\epsilon`, control the tree memory layout, as well as to control
how often domain decomposition and tree building occur.
'''

["Gravity, Domains, Trees".dSoft]
flag="e"
default=0.0
help="The gravitional Softening length"
docs='''
This sets the gravitational softening length **globally** for all particles
in code units. Normally the softening is read from the input file, and
can be different for each particle (for example for different masses).
'''

["Gravity, Domains, Trees".dSoftMax]
flag="eMax"
default=0.0
help="maximum comoving gravitational softening length (abs or multiplier)"

["Gravity, Domains, Trees".bPhysicalSoft]
flag="PhysSoft"
default=false
help="Physical gravitational softening length"

["Gravity, Domains, Trees".bSoftMaxMul]
flag="SMM"
default=true
help="Use maximum comoving gravitational softening length as a multiplier"

["Gravity, Domains, Trees".bDoGravity]
flag="g"
default=true
help="enable interparticle gravity"
docs='''
By setting this to false, accelerations due to gravitational forces are
not applied. This is useful for hydrodyamical simulations.
'''

["Gravity, Domains, Trees".nGridLin]
flag="lingrid"
default=0
help="Grid size for linear species 0=disabled"

["Gravity, Domains, Trees".bDoLinPkOutput]
flag="linpk"
default=false
help="enable power spectrum output for linear species"

["Gravity, Domains, Trees".bDualTree]
private=true
flag="2tree"
default=false
help="enable second tree for active rungs"

["Gravity, Domains, Trees".dFracDualTree]
private=true
flag="fndt"
default=0.05
help="Fraction of Active Particles for to use a dual tree"

["Gravity, Domains, Trees".dFracNoDomainDecomp]
flag="fndd"
default=0.1
help="Fraction of Active Particles for no DD"

["Gravity, Domains, Trees".dFracNoDomainRootFind]
flag="fndrf"
default=0.1
help="Fraction of Active Particles for no DD root finding"

["Gravity, Domains, Trees".dFracNoDomainDimChoice]
flag="fnddc"
default=0.1
help="Fraction of Active Particles for no DD dimension choice"

################################################################################
########## Analysis
################################################################################

["Analysis"."Power Spectrum Measurement"]
docs='''
The code provides a built-in tool for measuring the power spectrum P(k)
of a simulation. These parameters control the configuration.
'''

["Analysis"."Power Spectrum Measurement".nGridPk]
flag="pk"
default=0
help="Grid size for measure P(k) 0=disabled"
docs='''
This size of the 3D grid for measuring the power spectrum.
This feature is disabled if the grid size is zero which is the default.
A reasonable value is to set this to the same size as the IC grid,
plus or minus a factor of two.
'''

["Analysis"."Power Spectrum Measurement".nBinsPk]
flag="npk"
default=0
omitted=':math:`\frac{\text{nGridPk}}{2}`'
help="Number of log bins for P(k)"
docs='''
Specifies the number of P(k) bins (in log space) when measuring the power spectrum.
The default is half of the grid size (`nGridPk`).
'''

["Analysis"."Power Spectrum Measurement".nFoldPk]
flag="fpk"
default=[1]
help="Number of times to fold the power spectrum (list)"
docs='''
Normally the power spectrum measurement is done on a fixed size grid. This parameter
allows the measurement to be done multiple times by folding the particles allowing
high k values to be reached with a smaller grid.
'''

["Analysis"."Power Spectrum Measurement".bPkInterlace]
flag="pkinterlace"
default=true
help="Use interlacing to measure P(k)"
docs='''
If enabled, the power spectrum measurement tool creates two mass assignment grids.
The second contains the mass with the particles offset by half a grid cell.
The results of the two mass assignment grids are combined to reduce grid aliasing effects.
See :cite:t:`HockneyEastwood1988`, section 7-8 "Interlacing" for details..
'''

["Analysis"."Power Spectrum Measurement".iPkOrder]
flag="pko"
enum = { NGP=0, CIC=1, TSC=2, PCS=3}
name = "ASSIGNMENT_ORDER"
default=3
help="Mass assignment order for measuring P(k)"
docs='''
Selects the mass assignment order. The models should be imported with::

  from PKDGRAV import ASSIGNMENT_ORDER

Possible values are:
- ``ASSIGNMENT_ORDER.NGP``: Nearest Grid Point
- ``ASSIGNMENT_ORDER.CIC``: Cloud in Cell
- ``ASSIGNMENT_ORDER.TSC``: Triangular Shaped Cloud
- ``ASSIGNMENT_ORDER.PCS``: Piecewise Cubic Spline

The recommended method is PCS. See :cite:t:`2016MNRAS.460.3624S` for details.
'''

["Analysis"."Light Cone".bLightCone]
flag="lc"
default=false
help="output light cone data"
docs='''
Enable or disable light cone output.
'''

["Analysis"."Light Cone".dRedshiftLCP]
flag="zlcp"
default=0.0
help="starting redshift to output light cone"

["Analysis"."Light Cone".nSideHealpix]
flag="healpix"
default=0
help="Number per side of the healpix map"
docs='''
Sets the "nSide" parameter for healpix, and if non-zero
enables the output of the healpix maps.
'''

["Analysis"."Light Cone".bLightConeParticles]
flag="lcp"
default=false
help="output light cone particles"

["Analysis"."Light Cone".bBowtie]
flag="bbt"
default=false
help="output +++ and --- octants of the cone; a bowtie"

["Analysis"."Light Cone".sqdegLCP]
flag="sqdeg"
default=50.0
help="square degrees of lightcone (if (<0 || >41253) then all sky)"

["Analysis"."Light Cone".hLCP]
flag="hr"
default=[0.749,0.454,1.0]
help="lightcone direction vector"

["Analysis"."Group Finding"]
docs='''
Several group finding schemes are available.
The following parameters apply to all schemes.
'''

["Analysis"."Group Finding".nMinMembers]
flag="nMinMembers"
default=10
help="minimum number of group members"
docs='''
After groups have been identified, and that have fewer than this many
particles are removed.
'''

["Analysis"."Group Finding".dEnvironment0]
flag="dEnv0"
default=-1.0
omitted="disabled"
help="first radius for density environment about a group"

["Analysis"."Group Finding".dEnvironment1]
flag="dEnv1"
default=-1.0
omitted="disabled"
help="second radius for density environment about a group"

["Analysis"."Group Finding"."Friends of Friends"]
docs='''
This provides a classic Friends-of-Friends group finder where particles
are linked together if they are within a certain distance
:math:`\tau`.
'''

["Analysis"."Group Finding"."Friends of Friends".bFindGroups]
flag="groupfinder"
default=false
help="enable group finder"
docs='''
The Friends-of-friends group finder is enabled when this is true.
'''

["Analysis"."Group Finding"."Friends of Friends".dTau]
flag="tau"
default=0.0
help="linking length for FOF in code units"
docs='''
The linking length :math:`\tau`. This is normally set to one fifth of
the mean particle separation. For example, if you use the built-in IC
generator you could set this parameter with::

  dTau = 0.2 / nGrid
'''

["Analysis"."Group Finding"."Grasshopper"]
docs='''
This halo finder is not currently available.
'''

["Analysis"."Group Finding"."Grasshopper".bFindHopGroups]
flag="hop"
default=false
help="enable density-gradient group finder"

["Analysis"."Group Finding"."Grasshopper".dHopTau]
flag="hoptau"
default=-4.0
help="linking length for Gasshopper (negative for multiples of softening)"

["Analysis".dDeltakRedshift]
flag="zdel"
default=0.0
help="starting redshift to output delta(k) field"

################################################################################
########## I/O Parameters
################################################################################

["I/O Parameters".achInFile]
flag="I"
default=""
help="input file name"

["I/O Parameters".achOutName]
flag="o"
default="pkdgrav3"
help="output name for snapshots and logfile"

["I/O Parameters".achOutPath]
flag="op"
default=""
help="output path for snapshots and logfile"

["I/O Parameters".achIoPath]
flag="iop"
default=""
help="output path for snapshots and logfile"

["I/O Parameters".achCheckpointPath]
flag="cpp"
default=""
help="output path for checkpoints"

["I/O Parameters".achDataSubPath]
flag="dsp"
default=""
help="sub-path for data"

["I/O Parameters".achOutTimes]
flag="ot"
default=""
help="input file containing the sequence of output redshift|time|a"

["I/O Parameters".bInFileLC]
flag="lcin"
default=false
help="input light cone data"

["I/O Parameters".bParaRead]
flag="par"
default=true
help="enable parallel reading of files"

["I/O Parameters".bParaWrite]
flag="paw"
default=false
help="disable parallel writing of files"

["I/O Parameters".nParaRead]
flag="npar"
default=0
help="number of threads to read with during parallel read (0=unlimited)"

["I/O Parameters".nParaWrite]
flag="npaw"
default=0
help="number of threads to write with during parallel write (0=unlimited)"

["I/O Parameters".iOutInterval]
flag="oi"
default=0
help="number of timesteps between snapshots"

["I/O Parameters".iCheckInterval]
flag="ci"
default=0
help="number of timesteps between checkpoints"

["I/O Parameters".iLogInterval]
flag="ol"
default=1
help="number of timesteps between logfile outputs"

["I/O Parameters".iPkInterval]
flag="opk"
default=1
help="number of timesteps between pk outputs"

["I/O Parameters".iDeltakInterval]
flag="odk"
default=0
help="number of timesteps between DeltaK outputs"

["I/O Parameters".bHDF5]
flag="hdf5"
default=false
help="output in HDF5 format"

["I/O Parameters".bDoublePos]
flag="dp"
default=false
help="input/output double precision positions (standard format only)"

["I/O Parameters".bDoubleVel]
flag="dv"
default=false
help="input/output double precision velocities (standard format only)"

["I/O Parameters".bDoSoftOutput]
flag="softout"
default=false
help="enable soft outputs"

["I/O Parameters".bDoDensity]
flag="den"
default=true
help="enable density outputs"

["I/O Parameters".bDoAccOutput]
flag="accout"
default=false
help="enable acceleration outputs"

["I/O Parameters".bDoPotOutput]
flag="potout"
default=false
help="enable potential outputs"

["I/O Parameters".bDoRungOutput]
flag="rungout"
default=false
help="enable rung outputs"

["I/O Parameters".bDoRungDestOutput]
flag="rungdestout"
default=false
help="enable rung destination outputs"

["I/O Parameters".bStandard]
flag="std"
default=true
help="output in standard TIPSY binary format"

["I/O Parameters".iCompress]
flag="compress"
default=0
help="compression format, 0=none, 1=gzip, 2=bzip2"

["I/O Parameters".iWallRunTime]
flag="wall"
default=0
help="Maximum Wallclock time (in minutes) to run"

["I/O Parameters".iSignalSeconds]
flag="signal"
default=0
help="Time (in seconds) that USR1 is sent before termination"

["I/O Parameters".lstOrbits]
flag="orbit"
type=0
default=[0]
help="List of particle IDs of particle to write to orbit file"

################################################################################
########## Time Stepping
################################################################################

["Time Stepping".iStartStep]
flag="nstart"
default=0
help="initial step numbering"

["Time Stepping".nSteps]
flag="n"
default=0
help="number of timesteps"

["Time Stepping".nStepsSync]
flag="nsync"
default=0
help="number of timesteps to redshift dRedSync"

["Time Stepping".dRedSync]
flag="zsync"
default=10.0
help="specifies a redshift prior to dRedTo where it is useful to have particles synchonized"

["Time Stepping".dRedTo]
flag="zto"
default=0.0
help="specifies final redshift for the simulation"

["Time Stepping".dDelta]
flag="dt"
default=0.0
help="time step"

["Time Stepping".dEta]
flag="eta"
default=0.2
help="time step criterion"

["Time Stepping".bGravStep]
flag="gs"
default=false
help="Gravity timestepping according to iTimeStep Criterion"

["Time Stepping".time_step]
flag="ts"
default=1
ommited="TimeStep.epsilon_over_a"
help="Which timestep scheme to use"

["Time Stepping".bAccelStep]
flag="as"
default=false
help="Acceleration timestepping"

["Time Stepping".bEpsAccStep]
flag="ea"
default=false
help="Sqrt(Epsilon on a) timestepping"

["Time Stepping".bDensityStep]
flag="isrho"
default=false
help="Sqrt(1/Rho) timestepping"

["Time Stepping".iTimeStepCrit]
flag="tsc"
default=0
help="Criteria for dynamical time-stepping"

["Time Stepping".nPartRhoLoc]
flag="nprholoc"
default=32
help="Number of particles for local density in dynamical time-stepping"

["Time Stepping".dPreFacRhoLoc]
flag="dprefacrholoc"
default=4.1887902047863905 # pi*4.0/3.0
omitted=':math:`\frac{4}{3}\pi`'
help="Pre-factor for local density in dynamical time-stepping"

["Time Stepping".dEccFacMax]
flag="deccfacmax"
default=3000.0
help="Maximum correction factor for eccentricity correction"

["Time Stepping".nPartColl]
flag="npcoll"
default=0
help="Number of particles in collisional regime"

["Time Stepping".iMaxRung]
flag="mrung"
default=63
help="maximum timestep rung"

["Time Stepping".bNewKDK]
flag="NewKDK"
default=false
help="Use new implementation of KDK time stepping=no"

["Time Stepping".nTruncateRung]
flag="nTR"
default=0
help="number of MaxRung particles to delete MaxRung"

################################################################################
########## Force Accuracy
################################################################################

["Force Accuracy"]
docs='''
Parameters in this section control force accuracy and in turn control RMS error
in calculated accelerations.
'''

["Force Accuracy"."Barnes/Hut Opening Angle"]
docs='''
Opening angle control.
'''

["Force Accuracy"."Barnes/Hut Opening Angle".dTheta]
flag="theta"
default=0.7
help="Barnes opening criterion"
docs='''
The Barns/Hut opening criterion :math:`\theta`. A value of 0.7 gives
an RMS error of approximately :math:`0.1\%` which is normally adequate.
At very high redshift, when the particle distribution is very uniform
and thus the force on each particle is nearly zero then decreasing this
to 0.4 is recommended. Theta should be relaxed at lower redshift by
using accuracy.classic_theta_switch().
'''

["Force Accuracy"."Ewald".bEwald]
flag="ewald"
default=true
help="enable Ewald correction"
docs='''
If this is true then the Ewald correction to forces is applied for
periodic volumes. This has no effect if the simulation is not periodic.
'''

["Force Accuracy"."Ewald".nReplicas]
flag="nrep"
default=1
help="nReplicas"
docs='''
This sets the number of box replicas that will be considered for tree-based force calculations.
When periodic boundary conditions are disabled this parameter is ignored.
For cosmological simulations it is recommended to switch between 1 and 2 replicas
depending on :math:`\theta` by using accuracy.classic_replicas_switch().
'''

["Force Accuracy"."Ewald".dEwCut]
flag="ew"
default=2.6
help="dEwCut"

["Force Accuracy"."Ewald".dEwhCut]
flag="ewh"
default=2.8
help="dEwhCut"

################################################################################
########## Periodic Boundaries
################################################################################

["Periodic Boundaries".bPeriodic]
flag="p"
default=false
help="periodic/non-periodic"
docs='''
This turns on periodic boundary conditions. If you have gravity turned on
(which is the usual case) then you also want to enable Ewald correction.
'''

["Periodic Boundaries".dPeriod]
flag="L"
default=[1.0,1.0,1.0]
help="periodic box length"
docs='''
Length of the periodic box in code units.
This can be scalar float in which case all three dimensions have the same length,
or it can be a list of three numbers for the x, y and z period.
'''

################################################################################
########## Cosmology
################################################################################

["Cosmology".bComove]
flag="cm"
default=false
help="enable comoving coordinates"
docs='''
Enables comoving coordinate system and cosmology.
'''

["Cosmology".dBoxSize]
flag="mpc"
default=1.0
help="Simulation Box size in Mpc/h"
docs='''
The size of the simulation box in :math:`h^{-1}~\text{Mpc}`.
This is used when generating an initial condition and to
normalize the power spectrum measurement. It is also required
to normalize :math:`\theta` and :math:`\delta` if the CLASS
interface is used. For pure dark matter simulations it is not
technically necessary to specify this, but it is recommended.
'''

["Cosmology".dHubble0]
flag="Hub"
default=2.8944050182330705
omitted=':math:`\sqrt{\frac{8}{3}\pi}`'
help="dHubble0"
docs='''
The Hubble parameter :math:`H_0` in code units.
It is very unlikely that you will need to change this.
'''

["Cosmology"."Normalization"]
docs='''
Input transfer functions need to be normalized.
'''

["Cosmology"."Normalization".dSpectral]
flag="ns"
default=0.0
omitted="none"
help="dSpectral"
docs='''
This sets the spectral index :math:`n_{\text{s}}`.
'''

["Cosmology"."Normalization".dNormalization]
flag="As"
default=0.0
omitted="none"
help="dNormalization"
docs='''
This set the normalization :math:`A_{\text{s}}` of the transfer function.
This is normally used for the CLASS/CO\ *N*\ CEPT interface.
'''

["Cosmology"."Normalization".dSigma8]
flag="S8"
default=0.0
omitted="none"
help="dSimga8"
docs='''
Alternatively, the normalization of the transfer function can be
specified by supplying :math:`\sigma_8`, an observable.
This is more commonly used when specifying a transfer function.
'''

["Cosmology"."Transfer Function"]
docs='''
The cosmology can be specified using a tabulated transfer function
and by setting the cosmological parameters. If you instead use the
CO\ *N*\ CEPT/CLASS interface then none of these parameters should be
specified as they will be read from the HDF5 input file.
'''

["Cosmology"."Transfer Function".achTfFile]
flag="tf"
default=""
help="transfer file name (file in CMBFAST format)"
docs='''
A tabulated transfer function in CMBFAST format.
The first column is k and the second column is T(k).
Units are :math:`h^{-1}~\text{Mpc}`. This can be
omitted if you are not using the built-in IC generator
(i.e., you are supplying your own input file),
but the other parameters need to be specified for
cosmological runs.
'''

["Cosmology"."Transfer Function".h]
flag="h"
default=0.0
help="hubble parameter h"

["Cosmology"."Transfer Function".dOmega0]
flag="Om"
default=1.0
help="dOmega0"
docs='''
The matter density of the universe :math:`\Omega_m`.
'''

["Cosmology"."Transfer Function".dLambda]
flag="Lambda"
default=0.0
help="dLambda"
docs='''
The dark energy density of the universe :math:`\Omega_\Lambda`.
'''

["Cosmology"."Transfer Function".dOmegaDE]
flag="omDE"
default=0.0
help="Omega for Dark Energy using w0 and wa parameters: <dOmegaDE"

["Cosmology"."Transfer Function".w0]
flag="w0"
default=-1.0
help="w0 parameter for Dark Energy <w0"

["Cosmology"."Transfer Function".wa]
flag="wa"
default=0.0
help="wa parameter for Dark Energy <wa"

["Cosmology"."Transfer Function".dOmegaRad]
flag="Omrad"
default=0.0
help="dOmegaRad"

["Cosmology"."Transfer Function".dOmegab]
flag="Omb"
default=0.0
help="dOmegab"





["Cosmology"."CONCEPT/CLASS"]
docs='''
The code can use HDF5 files created by `CONCEPT <https://jmd-dk.github.io/concept/>`_
by tabulating `CLASS <http://class-code.net>`_ data for cosmology.
'''

["Cosmology"."CONCEPT/CLASS".bClass]
flag="class"
default=false
help="Enable/disable the use of CLASS"

["Cosmology"."CONCEPT/CLASS".achClassFilename]
flag="class_filename"
default=""
help="Name of hdf5 file containing the CLASS data"

["Cosmology"."CONCEPT/CLASS".achLinSpecies]
flag="lin_species"
default=""
help="Plus-separated string of linear species, e.g. ``\"g+ncdm[0]+metric\"``"

["Cosmology"."CONCEPT/CLASS".achPkSpecies]
flag="pk_species"
default=""
help="Plus-separated string of linear species for linear P(k)"

["Cosmology"."CONCEPT/CLASS".dRunning]
flag="alphas"
default=0.0
help="Primordial tilt running: <dRunning"

["Cosmology"."CONCEPT/CLASS".dPivot]
flag="kpivot"
default=0.05
help="Primordial pivot scale in 1/Mpc (not h/Mpc): <dPivot"



################################################################################
########## Initial Conditions
################################################################################

["Initial Conditions"]
docs='''
The code contains an Initial Condition (IC) generator that supports first
order (Zeldovich), second order and third order Lagrangian perturbation theory.
It is important that the cosmological parameters be properly set,
so refer to that section for details.
'''

["Initial Conditions".dRedFrom]
flag="z"
default=0.0
omitted="none"
help="specifies initial redshift for the simulation"

["Initial Conditions".nGrid]
flag="grid"
default=0
omitted="none"
help="Grid size for IC 0=disabled"
docs='''
This sets the grid size and hence the number of particles in the IC.
For a grid size of :math:`N` there will be :math:`N^3` particles.
'''

["Initial Conditions".iSeed]
flag="seed"
default=0
help="Random seed for IC"

["Initial Conditions".iLPT]
flag="lpt"
default=2
help="LPT order for IC"

["Initial Conditions".bWriteIC]
flag="wic"
default=false
help="Write IC after generating"

["Initial Conditions".bFixedAmpIC]
flag="fixedamp"
default=false
help="Use fixed amplitude of 1 for ICs"

["Initial Conditions".dFixedAmpPhasePI]
flag="fixedphase"
default=0.0
help="Phase shift for fixed amplitude in units of PI"

["Initial Conditions".bICgas]
flag="ICgas"
default=false
help="Enable/disable gas in the ICs"

["Initial Conditions".dInitialT]
flag="initT"
default=100.0
help="Initial temperature of the gas generated ICs"

################################################################################
########## Memory Model and Control
################################################################################

["Memory Model and Control".nBucket]
flag="b"
default=16
help="max number of particles in a bucket"
docs='''
Classic tree codes build the tree down to nodes that contain a single particle.
This parameter specifies the largest "bucket" size; when a tree cell has this
many or fewer particles, the node is no longer split.

In theory, single particle buckets allow for improved performance as cells can
be the exact size that the opening criteria requires.
In practice this introduces two complications.
First, the amount of memory required for the tree grows exponentially and will
eventually take more memory than the particles. The other complication is that
the tree walking time increases and even though less work is done calculating
the forces, the extra time walking the tree can end up taking longer.

A value between 8 and 32 is a reasonable compromise. Larger bucket sizes
result in less memory usage.
'''

["Memory Model and Control".nGroup]
flag="grp"
default=64
omitted="64 or 256 if GPU enabled"
help="max number of particles in a group"
docs='''
When a tree node with this many particles or fewer is reached during the tree walk,
the walk is stopped and all of these particles receive the same set of interactions.
Increasing this parameters moves work from tree walking to force calculations.
The default values are usually optimally tuned. This parameter must be greater or
equal to `nBucket`.
'''

["Memory Model and Control".dExtraStore]
flag="extra"
default=0.1
help="Extra storage for particles"
docs='''
The code allocates exactly enough space to store the particles if they are evenly
distributed between all of the threads, **plus** this fraction. For example, if this
parameter is set to 0.1 then it increases the size of the particle storage by 10%.
This uses additional memory, but makes it easier to balance work.
'''

["Memory Model and Control".nTreeBitsLo]
flag="treelo"
default=14
help="number of low bits for tree"

["Memory Model and Control".nTreeBitsHi]
flag="treehi"
default=18
help="number of high bits for tree"

["Memory Model and Control".nMemEphemeral]
flag="ephemeral"
default=0
size=8
help="minimum size of ephemeral (in bytes)"

["Memory Model and Control".bMemIntegerPosition]
flag="integer"
default=false
help="Particles have integer positions"
docs='''
By default particle positions are stored as double precision floating point numbers.
Enabling this feature changes positions to 32-bit integers. This can only be used
with periodical boxes, and will save 12 bytes of memory per particle.
'''

["Memory Model and Control".nIntegerFactor]
flag="ifactor"
private=true
default=0x80000000
omitted=':math:`2^{31}`'
help="Factor to use for integerized coordinates"
docs='''
This is the factor used to convert between integer and double precision coordinates.
This can be used to effectively reduce the resolution of the grid which you would
only do for testing. This must not exceed the value of an unsigned 32-bit integer,
and must be somewhat less to account for particles that drift outside the unit box.
DO NOT ADJUST THIS PARAMETER UNLESS YOU KNOW EXACTLY WHAT YOU ARE DOING.
The accuracy will not improve -- only get worse.
'''

["Memory Model and Control".bMemUnordered]
flag="unordered"
default=false
help="Particles have no specific order"
docs='''
This feature removes the particle ID (particle number) and will save 4 bytes per particle.
It is not possible to track particles between snapshots as there is no way to sort them,
unless `bMemParticleID` is enable.
'''

["Memory Model and Control".bMemParticleID]
flag="pid"
default=false
help="Particles have a unique identifier"
docs='''
This enables a 64-bit integer particle id that can be used to track particles between snapshots.
This feature is only available with file formats that support this additional field.
Currently this field can be read from GADGET2 format files and read and written to the HDF5 format.
'''

["Memory Model and Control".bMemAcceleration]
flag="Ma"
default=false
help="Particles have acceleration"

["Memory Model and Control".bMemVelocity]
flag="Mv"
default=false
help="Particles have velocity"

["Memory Model and Control".bMemPotential]
flag="Mp"
default=false
help="Particles have potential"

["Memory Model and Control".bMemGroups]
flag="Mg"
default=false
help="Particles support group finding"

["Memory Model and Control".bMemGlobalGid]
flag="Mgg"
default=false
help="Particles support global group ids"

["Memory Model and Control".bMemMass]
flag="Mm"
default=false
help="Particles have individual masses"

["Memory Model and Control".bMemSoft]
flag="Ms"
default=false
help="Particles have individual softening"

["Memory Model and Control".bMemVelSmooth]
flag="Mvs"
default=false
help="Particles support velocity smoothing"

["Memory Model and Control".bMemNodeMoment]
flag="MNm"
default=false
help="Tree nodes support multipole moments"

["Memory Model and Control".bMemNodeAcceleration]
flag="MNa"
default=false
help="Tree nodes support acceleration (for bGravStep)"

["Memory Model and Control".bMemNodeVelocity]
flag="MNv"
default=false
help="Tree nodes support velocity (for iTimeStepCrit = 1)"

["Memory Model and Control".bMemNodeSphBounds]
flag="MNsph"
default=false
help="Tree nodes support fast-gas bounds"

["Memory Model and Control".bMemNodeBnd]
flag="MNbnd"
default=true
help="Tree nodes support 3D bounds"

["Memory Model and Control".bMemNodeVBnd]
flag="MNvbnd"
default=false
help="Tree nodes support velocity bounds"

["Memory Model and Control".bMemBall]
flag="MBall"
default=false
help="Particles have ball"

################################################################################
########## Gas
################################################################################

["Gas".hydro_model]
flag="hydro"
enum = { NONE=0, SPH=1, MFM=2, MFV=3 }
default=0
omitted="NONE"
help="Hydro model to use: none, sph, meshless finite mass, meshless finite volume"
docs='''
Specifies which Hydro model to use. The models should be imported with::

  from PKDGRAV import HYDRO_MODEL

Possible values are:
 - ``HYDRO_MODEL.NONE``: Do not use hydrodynamics
 - ``HYDRO_MODEL.SPH``: Smoothed-Particle Hydrodynamics (SPH)
 - ``HYDRO_MODEL.MFM``: Meshless Finite-Mass Hydrodynamics (MFM)
 - ``HYDRO_MODEL.MFV``: Meshless Finite-Volume Hydrodynamics (MFV)
'''

["Gas".nSmooth]
flag="s"
default=64
help="number of particles to smooth over"

#["Gas".bGasAdiabatic]
#flag="GasAdiabatic"
#default=true
#help="Gas is Adiabatic"

["Gas".bGasIsentropic]
flag="GasIsentropic"
default=true
help="Gas is evolved isentropically"

#["Gas".bGasIsothermal]
#flag="GasIsothermal"
#default=false
#help="Gas is Isothermal"

["Gas".dEtaCourant]
flag="etaC"
default=0.4
help="Courant criterion"

["Gas".dEtauDot]
flag="etau"
default=-1.0
help="Timestepping criterion for internal energy (negative = deactivated)"

["Gas".dEtaSdot]
flag="etaS"
default=-1.0
help="Timestepping criterion for deviatoric stress (negative = deactivated)"

["Gas".dTimeStepSmin]
flag="timeStepSmin"
default=0.0
help="Minimum S value used in the timestepping criterion for deviatoric stress"

["Gas".dCFLacc]
flag="etaAcc"
default=0.01
help="Timestep criterion for the acceleration"

["Gas".dConstAlpha]
flag="alpha"
default=1.0
help="Alpha constant in viscosity"

["Gas".dConstBeta]
flag="beta"
default=2.0
help="Beta constant in viscosity"

["Gas".dConstGamma]
flag="gamma"
default=1.6666666666666667 # 5.0/3.0
omitted=':math:`\frac{5}{3}`'
help="Ratio of specific heats"

["Gas".dMeanMolWeight]
flag="mmw"
default=1.0
help="Mean molecular weight in amu"

["Gas".dGasConst]
flag="gcnst"
default=1.0
help="Gas Constant"

["Gas".dKBoltzUnit]
flag="kb"
default=1.0
help="Boltzmann Constant in System Units"

["Gas".dhMinOverSoft]
flag="hmin"
default=0.0
help="Minimum h as a fraction of Softening"

["Gas".dFastGasFraction]
flag="FastGasFraction"
default=0.5
help="Fraction for FastGas"

["Gas".dMsolUnit]
flag="msu"
default=1.0
help="Solar mass/system mass unit"
docs='''
This is the number of solar masses (:math:`M_\odot`) per system mass unit.
If you measure a mass of 1 in system units, it is this many solar masses.
'''

["Gas".dKpcUnit]
flag="kpcu"
default=1000.0
help="Kiloparsec/system length unit"
docs='''
This is the number of kiloparsecs per system unit length.
If you measure a distance of 1 in system units, it is this many kiloparsecs.
'''

["Gas".bAddDelete]
flag="adddel"
default=false
help="Add Delete Particles"

["Gas".fKernelTarget]
flag="fKernelTarget"
default=0.0
help="Kernel target, either number- or massdensity"

["Gas".dVelocityDamper]
flag="VelocityDamper"
default=0.0
help="Velocity Damper"

["Gas".dVelocityDamperEnd]
flag="VelocityDamperEnd"
default=0.0
help="Velocity Damper Endnd value"

["Gas".dVelocityDamperEndTime]
flag="VelocityDamperEndTime"
default=0.0
help="Velocity Damper End Time"

["Gas".dBallSizeLimit]
flag="ballSizeLimit"
default=10.0
help="Ball size limit"

["Gas".iKernelType]
flag="KernelType"
default=0
help="Kernel type, 0: M4, 1: Wendland C2, 2: Wendland C4, 3: Wendland C6"

["Gas".bGasBuiltinIdeal]
flag="GasBuiltinIdeal"
default=false
help="Use builtin ideal gas"

["Gas".bGasOnTheFlyPrediction]
flag="GasOnTheFlyPrediction"
default=false
help="Do on the fly prediction"

["Gas".bGasInterfaceCorrection]
flag="GasInterfaceCorrection"
default=false
help="Do interface correction"

["Gas".bGasConsistentPrediction]
flag="GasConsistentPrediction"
default=false
help="Use consistent prediction"

["Gas".bCentrifugal]
flag="Centrifugal"
default=false
help="Apply centrifugal force"

["Gas".dCentrifT0]
flag="CentrifT0"
default=0.0
help="Start time for centrifugal ramp"

["Gas".dCentrifT1]
flag="CentrifT1"
default=0.0
help="End time for centrifugal ramp"

["Gas".dCentrifOmega0]
flag="CentrifOmega0"
default=0.0
help="Maximum omega for centrifugal ramp"

["Gas".bGasDoExtensiveILPTest]
flag="GasDoExtensiveILPTest"
default=false
help="Extensively test the ILP for completeness. Very costly."

["Gas".bShearStrengthModel]
flag="ShearStrengthModel"
default=false
help="Enable the shear strength model in NewSPH."

["Gas".bMeshlessHydro]
flag="meshless"
default=false
help="Use the new implementation of the hydrodynamics"

["Gas".bGlobalDt]
flag="globaldt"
default=false
help="Force all particles to the same rung"

["Gas".bIterativeSmoothingLength]
flag="iterh"
default=true
help="Use an iterative scheme to obtain h"

["Gas".bWakeUpParticles]
flag="wakeup"
default=false
help="Wake the particles when there is a big rung difference"

["Gas".dNeighborsStd]
flag="neighstd"
default=1.0
help="Maximum deviation from desired number of neighbors"

["Gas".bOutFineStatistics]
flag="finestats"
default=false
help="Save high cadence information on the rung distribution and star formation"

["Gas".ddHonHLimit]
flag="HonHLimit"
default=0.1
help="|dH|/H Limiter"
docs='''
:math:`\frac{|dH|}{H}` limiter
'''

["Gas".dMaxPhysicalSoft]
flag="MaxPhysicalSoft"
default=0.0
help="maximum softening in physical coordinates"

################################################################################
########## Cooling
################################################################################

["Cooling".achCoolingTables]
flag="coolingtables"
default=""
help="Path to the cooling tables"

["Cooling".fH_reion_z]
flag="H_reion_z"
default=11.5
help="Redshift of Hydrogen reionization"

["Cooling".fH_reion_eV_p_H]
flag="H_reion_eV_p_H"
default=2.0
help="Energy injected per proton during H reionization, eV"

["Cooling".fHe_reion_eV_p_H]
flag="He_reion_eV_p_H"
default=2.0
help="Energy injected per proton during He reionization, eV"

["Cooling".fHe_reion_z_centre]
flag="He_reion_z_centre"
default=3.5
help="Mean redshift of Helium reionization"

["Cooling".fHe_reion_z_sigma]
flag="He_reion_z_sigma"
default=0.5
help="Redshift interval for Helium reionzation"

["Cooling".fT_CMB_0]
flag="T_CMB_0"
default=2.725
help="Temperature of the CMB at z=0"

["Cooling".dCoolingMinTemp]
flag="CoolingMinTemp"
default=1e2
help="Minimum allowed temperature, K"

################################################################################
########## Effective equation of state
################################################################################

["Effective equation of state".dEOSFloornH]
flag="EOSFloornH"
default=1e-5
omitted=':math:`10^{-5}`'
help="Minimum density at which the internal energy floor will be applied, n_H cm-3"

["Effective equation of state".dEOSFloorMinOD]
flag="EOSFloorMinOD"
default=10
help="Minimum baryonic overdensity at which the internal energy floor will be applied"

["Effective equation of state".dEOSFloorTemp]
flag="EOSFloorTemp"
default=1e4
help="Temperature at the internal energy floor, K"

["Effective equation of state".dEOSPolyFloornH]
flag="EOSPolyFloornH"
default=0.1
help="Density threshold beyond which the polytropic effective EOS will be applied, nH cm-3)"

["Effective equation of state".dEOSPolyFloorMinOD]
flag="EOSPolyFloorMinOD"
default=10
help="Minimum baryonic overdensity at which the polytropic effective EOS will be applied"

["Effective equation of state".dEOSPolyFloorIndex]
flag="EOSPolyFloorIndex"
default=1.3333333333333333
omitted=':math:`\frac{4}{3}`'
help="Index of the polytropic effective EOS"

["Effective equation of state".dEOSPolyFloorTemp]
flag="EOSPolyFloorTemp"
default=1e4
help="Temperature at the density threshold for the effective EOS, K"

["Effective equation of state".dEOSNJeans]
flag="EOSNJeans"
default=8.75
help="Number of elements to resolve the Jeans length"

################################################################################
########## Star formation
################################################################################

["Star formation".dSFThresholdDen]
flag="SFThresholdDen"
default=0.1
help="Minimum density at which the star formation can happen, nH cm-3"

["Star formation".bSFThresholdDenSchaye2004]
flag="SFThresholdDenSchaye2004"
default=false
help="Use the metallicity-dependent star-formation density threshold of Schaye (2004)"

["Star formation".dSFThresholdT]
flag="SFThresholdT"
default=1e5
help="Maximum temperature at which the star formation can happen, K"

["Star formation".dSFMinOverDensity]
flag="SFminOverDens"
default=57.7
help="Minimum overdensity for allowing star formation"

["Star formation".dSFGasFraction]
flag="SFGasFraction"
default=0.3
help="Gas fraction assumed for the star formation"

["Star formation".dSFindexKS]
flag="SFindexKS"
default=1.4
help="Index of the Kennicutt-Schmidt star-formation law"

["Star formation".dSFnormalizationKS]
flag="SFnormalizationKS"
default=1.515e-4
omitted=':math:`1.515\times 10^{-4}`'
help="Normalization of the Kennicutt-Schmidt star-formation law. Value must be consistent with the chosen IMF"

["Star formation".dSFEfficiency]
flag="SFEfficiency"
default=0.0
help="Star formation efficiency per free-fall time; set >0 to use density-based SFR"

################################################################################
########## Supernova feedback
################################################################################

["Supernova feedback".bCCSNFeedback]
flag="bCCSNFeedback"
default=true
help="Activate energy feedback from CCSN events"

["Supernova feedback".bSNIaFeedback]
flag="bSNIaFeedback"
default=false
help="Activate energy feedback from SNIa events"

["Supernova feedback".dSNFBEfficiency]
flag="SNFBEfficiency"
default=1.0
help="Efficiency of SN feedback. Asymptotic minimum efficiency if dSNFBMaxEff is provided"

["Supernova feedback".dSNFBMaxEff]
flag="SNFBMaxEff"
default=0.0
help="Asymptotic maximum efficiency of SN feedback"

["Supernova feedback".dSNFBEffIndex]
flag="SNFBEffIndex"
default=0.87
help="Metallicity and density index for the feedback efficiency"

["Supernova feedback".dSNFBEffnH0]
flag="SNFBEffnH0"
default=0.67
help="Hydrogen number density normalization of the feedback efficiency, nH cm-3"

["Supernova feedback".dSNFBDT]
flag="SNFBDT"
default=31622776.60168379 # 10**7.5
omitted=':math:`10^{7.5}`'
help="Gas-particle temperature increment per SN feedback event, K"

["Supernova feedback".dCCSNFBDelay]
flag="CCSNFBDelay"
default=3e7
omitted=':math:`3\times 10^7`'
help="Time between star formation and injection of CCSN energy, yr"

["Supernova feedback".dCCSNEnergy]
flag="CCSNEnergy"
default=1e51
omitted=':math:`10^{51}`'
help="CCSN event energy, erg"

["Supernova feedback".dSNIaFBDelay]
flag="dSNIaFBDelay"
default=2e8
omitted=':math:`2\times 10^8`'
help="Time between star formation and injection of SNIa energy, yr"

["Supernova feedback".dSNIaEnergy]
flag="dSNIaEnergy"
default=1e51
omitted=':math:`10^{51}`'
help="SNIa event energy, erg"

################################################################################
########## Blackholes
################################################################################

["Blackholes".bBHMerger]
flag="bBHMerger"
default=true
help="Activate mergers of blackhole particles"

["Blackholes".bBHAccretion]
flag="bBHAccretion"
default=true
help="Activate the accretion of gas particles into blackholes"

["Blackholes".bBHFeedback]
flag="bBHFeedback"
default=true
help="Activate the BH feedback"

["Blackholes".dBHAccretionAlpha]
flag="BHAccretionAlpha"
default=1.0
help="Accretion boost parameter"

["Blackholes".dBHAccretionCvisc]
flag="BHAccretionCvisc"
default=0.0
help="Accretion viscosity parameter"

["Blackholes".dBHRadiativeEff]
flag="dBHRadiativeEff"
default=0.1
help="AGN radiative efficiency"

["Blackholes".dBHFBEff]
flag="BHFBEff"
default=0.1
help="AGN coupling efficiency with its surroundings"

["Blackholes".dBHFBDT]
flag="BHFBDT"
default=1e8
omitted=':math:`10^8`'
help="Gas-particle temperature increment per AGN feedback event, K"

["Blackholes".dBHAccretionEddFac]
flag="BHAccretionEddFac"
default=1.05391277e-06
omitted=':math:`\frac{4\pi\times m_p}{\sigma_t\times c} = 1.05391277\times 10^{-6}`'
help="4pi * m_p / sigma_T / c , kg m^-3 s"

["Blackholes".bBHPlaceSeed]
flag="bBHPlaceSeed"
default=true
help="Place BH seeds in FOF groups"

["Blackholes".dBHSeedMass]
flag="BHSeedMass"
default=1.0
help="Mass of the BH seed, in code units"

["Blackholes".dBHMhaloMin]
flag="BHMhaloMin"
default=1.0
help="Minimum mass required to place a BH in a FOF group, in code units"

################################################################################
########## Chemistry
################################################################################

["Chemistry".dInitialH]
flag="InitialH"
default=0.75
help="Initial Hydrogen abundance"

["Chemistry".dInitialHe]
flag="InitialHe"
default=0.25
help="Initial Helium abundance"

["Chemistry".dInitialC]
flag="InitialC"
default=0.0
help="Initial Carbon abundance"

["Chemistry".dInitialN]
flag="InitialN"
default=0.0
help="Initial Nitrogen abundance"

["Chemistry".dInitialO]
flag="InitialO"
default=0.0
help="Initial Oxygen abundance"

["Chemistry".dInitialNe]
flag="InitialNe"
default=0.0
help="Initial Neon abundance"

["Chemistry".dInitialMg]
flag="InitialMg"
default=0.0
help="Initial Magnesium abundance"

["Chemistry".dInitialSi]
flag="InitialSi"
default=0.0
help="Initial Silicon abundance"

["Chemistry".dInitialFe]
flag="InitialFe"
default=0.0
help="Initial Iron abundance"

["Chemistry".dInitialMetallicity]
flag="InitialMetallicity"
default=0.0
help="Initial metallicity"

################################################################################
########## Stellar Initial-Mass Function (IMF)
################################################################################

["Stellar Initial-Mass Function (IMF)".achIMFType]
flag="imftype"
default="chabrier"
help="Type of IMF"

["Stellar Initial-Mass Function (IMF)".dIMFMinMass]
flag="IMFMinMass"
default=0.1
help="Lower-mass limit of the IMF, Msol"

["Stellar Initial-Mass Function (IMF)".dIMFMaxMass]
flag="IMFMaxMass"
default=100.0
help="Upper-mass limit of the IMF, Msol"

["Stellar Initial-Mass Function (IMF)".dCCSNMinMass]
flag="CCSNMinMass"
default=6.0
help="Minimum mass for a star to end its life as a Core Collapse Supernova, Msol"

["Stellar Initial-Mass Function (IMF)".dCCSNMaxMass]
flag="CCSNMaxMass"
default=100.0
help="Maximum mass for a star to end its life as a Core Collapse Supernova, Msol"

################################################################################
########## Stellar evolution
################################################################################

["Stellar evolution".achStelEvolPath]
flag="stevtables"
default=""
help="Path to stellar evolution tables"

["Stellar evolution".achSNIaDTDType]
flag="dtdtype"
default="exponential"
help="Type of Delay-Time Distribution function for SNIa events"

["Stellar evolution".bChemEnrich]
flag="bChemEnrich"
default=true
help="Activate chemical enrichment of gas particles surrounding a star particle"

["Stellar evolution".dSNIaExpScale]
flag="SNIaExpScale"
default=2e9
omitted=':math:`2\times 10^9`'
help="Time scale of the exponential Delay-Time Distribution function, yr"

["Stellar evolution".dSNIaPLScale]
flag="SNIaPLScale"
default=-1.1
help="Index of the power-law Delay-Time Distribution function"

["Stellar evolution".dSNIaPLInitTime]
flag="SNIaPLInitTime"
default=40e6
omitted=':math:`40\times 10^6`'
help="Initial time for the normalization of the power-law Delay-Time Distribution function, yr"

["Stellar evolution".dSNIaPLFinalTime]
flag="SNIaPLFinalTime"
default=13.7e9
omitted=':math:`13.7\times 10^9`'
help="Final time for the normalization of the power-law Delay-Time Distribution function, yr"

["Stellar evolution".dSNIaNumPerMass]
flag="SNIaNumPerMass"
default=2e-3
help="Number of SNIa events per stellar mass, 1/Msol"

["Stellar evolution".dSNIaMaxMass]
flag="SNIaMaxMass"
default=8.0
help="Maximum mass for the likely progenitors of SNIa events, Msol"

["Stellar evolution".dStellarWindSpeed]
flag="StellarWindSpeed"
default=10.0
help="Stellar wind speed, km/s"

################################################################################
########## Debugging/Testing/Diagnostics
################################################################################

["Debugging/Testing/Diagnostics".bOverwrite]
flag="overwrite"
default=false
help="enable overwrite safety lock"
docs='''
When a simulation is run, a special file named ".lockfile" is created. If The
program exits normally (after a checkpoint or output) then the file is removed.
If the file is present when the code is run and this parameter is false, then
the code will immediately exit with an error. Setting this to true disables
this behaviour.
'''

["Debugging/Testing/Diagnostics".bVWarnings]
flag="vwarnings"
default=true
help="enable warnings"
docs='''
Prints a warning when unusual (but valid) conditions are encountered, for example if
a .lockfile exists and bOverwrite is true, or the maximum rung is set to zero
(forcing single stepping).
'''

["Debugging/Testing/Diagnostics".bVStart]
flag="vstart"
default=true
help="enable verbose start"
docs='''
Causes additional progress updates to be printed during the start of a simulation,
for example which file is being read, or that an initial condition is being generated.
'''

["Debugging/Testing/Diagnostics".bVStep]
flag="vstep"
default=true
help="enable verbose step"
docs='''
Provides verbose information on what calculations and analysis is being performed
during the base steps.
'''

["Debugging/Testing/Diagnostics".bVRungStat]
flag="vrungstat"
default=true
help="enable rung statistics"
docs='''
Provides rung related information, such as the distribution of particles by rung,
as well as details on the load balancer calculations.
'''

["Debugging/Testing/Diagnostics".bVDetails]
flag="vdetails"
default=false
help="enable verbose details"
docs='''
Provides verbose tracing information which is normally not useful except to a
developer debugging an issue with the code.
'''

["Debugging/Testing/Diagnostics".iCacheSize]
flag="cs"
default=0
help="size of the MDL cache (0=default)"

["Debugging/Testing/Diagnostics".iCacheMaxInflight]
flag="flight"
default=0
help="maximum number of inflight cache message to each rank (0=no limit)"

["Debugging/Testing/Diagnostics".iWorkQueueSize]
flag="wqs"
default=0
help="size of the MDL work queue"

["Debugging/Testing/Diagnostics".bGPU]
flag="gpu"
default=true
help="enable or disable the GPU use"
docs='''
If compiled with GPU support, the code will try to use a GPU to
accelerate some phases of the calculation. If no GPU is present,
the CPU alone will be used. The use of the GPU can be disabled
by setting this to False.
'''

["Debugging/Testing/Diagnostics".bIgnoreSIGBUS]
flag="sigbus"
private=true
default=false
help="ignore SIGBUS"
docs='''
At least one system experiences spurious SIGBUS singals during runtime that are
not restricted to just PKDGRAV3. The workaround is to trap SIGBUS and continue.
Obviously this is not ideal, but desperate times call for desperate measures.
'''