# Makefile.in generated by automake 1.9.2 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SOURCES = cosmo.c master.c param.c pst.c smooth.c tree.c ewald.c main.c moments.c outtype.c pkd.c romberg.c smoothfcn.c $(am__append_1) $(am__append_2) $(am__append_3) $(am__append_4)

srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/pkdgrav2m
pkglibdir = $(libdir)/pkdgrav2m
pkgincludedir = $(includedir)/pkdgrav2m
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = pkdgrav2m_mpi$(EXEEXT) pkdgrav2m_pthread$(EXEEXT)
#am__append_1 = ../bsc/grav2.c ../bsc/walk2.c
##am__append_2 = ../bsc/momGenLocrAddSIMDMomr.c
am__append_3 = grav.c walk.c
#am__append_4 = io.c
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog INSTALL NEWS \
	compile depcomp install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__pkdgrav2m_mpi_SOURCES_DIST = cosmo.c master.c param.c pst.c \
	smooth.c tree.c ewald.c main.c moments.c outtype.c pkd.c \
	romberg.c smoothfcn.c ../bsc/grav2.c ../bsc/walk2.c \
	../bsc/momGenLocrAddSIMDMomr.c grav.c walk.c io.c \
	$(MDL)/mpi/mdl.c
#am__objects_1 = pkdgrav2m_mpi-grav2.$(OBJEXT) \
#	pkdgrav2m_mpi-walk2.$(OBJEXT)
##am__objects_2 = pkdgrav2m_mpi-momGenLocrAddSIMDMomr.$(OBJEXT)
am__objects_3 = pkdgrav2m_mpi-grav.$(OBJEXT) \
	pkdgrav2m_mpi-walk.$(OBJEXT)
#am__objects_4 = pkdgrav2m_mpi-io.$(OBJEXT)
am__objects_5 = pkdgrav2m_mpi-cosmo.$(OBJEXT) \
	pkdgrav2m_mpi-master.$(OBJEXT) pkdgrav2m_mpi-param.$(OBJEXT) \
	pkdgrav2m_mpi-pst.$(OBJEXT) pkdgrav2m_mpi-smooth.$(OBJEXT) \
	pkdgrav2m_mpi-tree.$(OBJEXT) pkdgrav2m_mpi-ewald.$(OBJEXT) \
	pkdgrav2m_mpi-main.$(OBJEXT) pkdgrav2m_mpi-moments.$(OBJEXT) \
	pkdgrav2m_mpi-outtype.$(OBJEXT) pkdgrav2m_mpi-pkd.$(OBJEXT) \
	pkdgrav2m_mpi-romberg.$(OBJEXT) \
	pkdgrav2m_mpi-smoothfcn.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4)
am_pkdgrav2m_mpi_OBJECTS = $(am__objects_5) \
	pkdgrav2m_mpi-mdl.$(OBJEXT)
pkdgrav2m_mpi_OBJECTS = $(am_pkdgrav2m_mpi_OBJECTS)
pkdgrav2m_mpi_LDADD = $(LDADD)
am__pkdgrav2m_pthread_SOURCES_DIST = cosmo.c master.c param.c pst.c \
	smooth.c tree.c ewald.c main.c moments.c outtype.c pkd.c \
	romberg.c smoothfcn.c ../bsc/grav2.c ../bsc/walk2.c \
	../bsc/momGenLocrAddSIMDMomr.c grav.c walk.c io.c \
	$(MDL)/pthread/mdl.c
#am__objects_6 =  \
#	pkdgrav2m_pthread-grav2.$(OBJEXT) \
#	pkdgrav2m_pthread-walk2.$(OBJEXT)
##am__objects_7 = pkdgrav2m_pthread-momGenLocrAddSIMDMomr.$(OBJEXT)
am__objects_8 =  \
	pkdgrav2m_pthread-grav.$(OBJEXT) \
	pkdgrav2m_pthread-walk.$(OBJEXT)
#am__objects_9 = pkdgrav2m_pthread-io.$(OBJEXT)
am__objects_10 = pkdgrav2m_pthread-cosmo.$(OBJEXT) \
	pkdgrav2m_pthread-master.$(OBJEXT) \
	pkdgrav2m_pthread-param.$(OBJEXT) \
	pkdgrav2m_pthread-pst.$(OBJEXT) \
	pkdgrav2m_pthread-smooth.$(OBJEXT) \
	pkdgrav2m_pthread-tree.$(OBJEXT) \
	pkdgrav2m_pthread-ewald.$(OBJEXT) \
	pkdgrav2m_pthread-main.$(OBJEXT) \
	pkdgrav2m_pthread-moments.$(OBJEXT) \
	pkdgrav2m_pthread-outtype.$(OBJEXT) \
	pkdgrav2m_pthread-pkd.$(OBJEXT) \
	pkdgrav2m_pthread-romberg.$(OBJEXT) \
	pkdgrav2m_pthread-smoothfcn.$(OBJEXT) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8) $(am__objects_9)
am_pkdgrav2m_pthread_OBJECTS = $(am__objects_10) \
	pkdgrav2m_pthread-mdl.$(OBJEXT)
pkdgrav2m_pthread_OBJECTS = $(am_pkdgrav2m_pthread_OBJECTS)
pkdgrav2m_pthread_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(am__pkdgrav2m_mpi_SOURCES_DIST) \
	$(am__pkdgrav2m_pthread_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /benutzer/theorie/mzemp/programs/pkdgrav2m/missing --run aclocal-1.9
ALLOCA = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /benutzer/theorie/mzemp/programs/pkdgrav2m/missing --run tar
AUTOCONF = ${SHELL} /benutzer/theorie/mzemp/programs/pkdgrav2m/missing --run autoconf
AUTOHEADER = ${SHELL} /benutzer/theorie/mzemp/programs/pkdgrav2m/missing --run autoheader
AUTOMAKE = ${SHELL} /benutzer/theorie/mzemp/programs/pkdgrav2m/missing --run automake-1.9
AWK = gawk
CC = pgcc
CCDEPMODE = depmode=none
CFLAGS = -g
CHANGESOFT_FALSE = #
CHANGESOFT_TRUE = 
CPP = pgcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
HSHRINK_FALSE = 
HSHRINK_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lpthread -lm 
LOCAL_EXPANSION_FALSE = 
LOCAL_EXPANSION_TRUE = #
LTLIBOBJS = 
MAKEINFO = ${SHELL} /benutzer/theorie/mzemp/programs/pkdgrav2m/missing --run makeinfo
OBJEXT = o
PACKAGE = pkdgrav2m
PACKAGE_BUGREPORT = bugs@pkdgrav.com
PACKAGE_NAME = pkdgrav2m
PACKAGE_STRING = pkdgrav2m 2.1
PACKAGE_TARNAME = pkdgrav2m
PACKAGE_VERSION = 2.1
PATH_SEPARATOR = :
RELAXATION_FALSE = 
RELAXATION_TRUE = #
SET_MAKE = 
SHELL = /bin/sh
SOFTLINEAR_FALSE = 
SOFTLINEAR_TRUE = #
SOFTSQUARE_FALSE = 
SOFTSQUARE_TRUE = #
STRIP = 
USE_HDF5_FALSE = 
USE_HDF5_TRUE = #
USE_MDL_IO_FALSE = 
USE_MDL_IO_TRUE = #
USE_SIMD_FALSE = 
USE_SIMD_TRUE = #
VERSION = 2.1
ac_ct_CC = pgcc
ac_ct_STRIP = 
am__fastdepCC_FALSE = 
am__fastdepCC_TRUE = #
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /benutzer/theorie/mzemp/programs/pkdgrav2m/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
SOURCES = cosmo.c master.c param.c pst.c smooth.c tree.c ewald.c \
	main.c moments.c outtype.c pkd.c romberg.c smoothfcn.c \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4)
##AM_CFLAGS = -msse3
MDL = ../mdl
#MDL = ../bsc
pkdgrav2m_mpi_SOURCES = $(SOURCES) $(MDL)/mpi/mdl.c
pkdgrav2m_mpi_CFLAGS = -DMDL_MPI -I$(MDL)/mpi/ $(AM_CFLAGS)
pkdgrav2m_pthread_SOURCES = $(SOURCES) $(MDL)/pthread/mdl.c
pkdgrav2m_pthread_CFLAGS = -DMDL_PTHREAD -I../mdl/pthread/ $(AM_CFLAGS)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
pkdgrav2m_mpi$(EXEEXT): $(pkdgrav2m_mpi_OBJECTS) $(pkdgrav2m_mpi_DEPENDENCIES) 
	@rm -f pkdgrav2m_mpi$(EXEEXT)
	$(LINK) $(pkdgrav2m_mpi_LDFLAGS) $(pkdgrav2m_mpi_OBJECTS) $(pkdgrav2m_mpi_LDADD) $(LIBS)
pkdgrav2m_pthread$(EXEEXT): $(pkdgrav2m_pthread_OBJECTS) $(pkdgrav2m_pthread_DEPENDENCIES) 
	@rm -f pkdgrav2m_pthread$(EXEEXT)
	$(LINK) $(pkdgrav2m_pthread_LDFLAGS) $(pkdgrav2m_pthread_OBJECTS) $(pkdgrav2m_pthread_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/pkdgrav2m_mpi-cosmo.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-ewald.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-grav.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-grav2.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-io.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-main.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-master.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-mdl.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-momGenLocrAddSIMDMomr.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-moments.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-outtype.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-param.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-pkd.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-pst.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-romberg.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-smooth.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-smoothfcn.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-tree.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-walk.Po
include ./$(DEPDIR)/pkdgrav2m_mpi-walk2.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-cosmo.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-ewald.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-grav.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-grav2.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-io.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-main.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-master.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-mdl.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-momGenLocrAddSIMDMomr.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-moments.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-outtype.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-param.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-pkd.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-pst.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-romberg.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-smooth.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-smoothfcn.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-tree.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-walk.Po
include ./$(DEPDIR)/pkdgrav2m_pthread-walk2.Po

.c.o:
#	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c $<

.c.obj:
#	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

pkdgrav2m_mpi-cosmo.o: cosmo.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-cosmo.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-cosmo.Tpo" -c -o pkdgrav2m_mpi-cosmo.o `test -f 'cosmo.c' || echo '$(srcdir)/'`cosmo.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-cosmo.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-cosmo.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-cosmo.Tpo"; exit 1; fi
	source='cosmo.c' object='pkdgrav2m_mpi-cosmo.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-cosmo.o `test -f 'cosmo.c' || echo '$(srcdir)/'`cosmo.c

pkdgrav2m_mpi-cosmo.obj: cosmo.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-cosmo.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-cosmo.Tpo" -c -o pkdgrav2m_mpi-cosmo.obj `if test -f 'cosmo.c'; then $(CYGPATH_W) 'cosmo.c'; else $(CYGPATH_W) '$(srcdir)/cosmo.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-cosmo.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-cosmo.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-cosmo.Tpo"; exit 1; fi
	source='cosmo.c' object='pkdgrav2m_mpi-cosmo.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-cosmo.obj `if test -f 'cosmo.c'; then $(CYGPATH_W) 'cosmo.c'; else $(CYGPATH_W) '$(srcdir)/cosmo.c'; fi`

pkdgrav2m_mpi-master.o: master.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-master.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-master.Tpo" -c -o pkdgrav2m_mpi-master.o `test -f 'master.c' || echo '$(srcdir)/'`master.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-master.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-master.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-master.Tpo"; exit 1; fi
	source='master.c' object='pkdgrav2m_mpi-master.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-master.o `test -f 'master.c' || echo '$(srcdir)/'`master.c

pkdgrav2m_mpi-master.obj: master.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-master.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-master.Tpo" -c -o pkdgrav2m_mpi-master.obj `if test -f 'master.c'; then $(CYGPATH_W) 'master.c'; else $(CYGPATH_W) '$(srcdir)/master.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-master.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-master.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-master.Tpo"; exit 1; fi
	source='master.c' object='pkdgrav2m_mpi-master.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-master.obj `if test -f 'master.c'; then $(CYGPATH_W) 'master.c'; else $(CYGPATH_W) '$(srcdir)/master.c'; fi`

pkdgrav2m_mpi-param.o: param.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-param.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-param.Tpo" -c -o pkdgrav2m_mpi-param.o `test -f 'param.c' || echo '$(srcdir)/'`param.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-param.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-param.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-param.Tpo"; exit 1; fi
	source='param.c' object='pkdgrav2m_mpi-param.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-param.o `test -f 'param.c' || echo '$(srcdir)/'`param.c

pkdgrav2m_mpi-param.obj: param.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-param.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-param.Tpo" -c -o pkdgrav2m_mpi-param.obj `if test -f 'param.c'; then $(CYGPATH_W) 'param.c'; else $(CYGPATH_W) '$(srcdir)/param.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-param.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-param.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-param.Tpo"; exit 1; fi
	source='param.c' object='pkdgrav2m_mpi-param.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-param.obj `if test -f 'param.c'; then $(CYGPATH_W) 'param.c'; else $(CYGPATH_W) '$(srcdir)/param.c'; fi`

pkdgrav2m_mpi-pst.o: pst.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-pst.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-pst.Tpo" -c -o pkdgrav2m_mpi-pst.o `test -f 'pst.c' || echo '$(srcdir)/'`pst.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-pst.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-pst.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-pst.Tpo"; exit 1; fi
	source='pst.c' object='pkdgrav2m_mpi-pst.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-pst.o `test -f 'pst.c' || echo '$(srcdir)/'`pst.c

pkdgrav2m_mpi-pst.obj: pst.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-pst.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-pst.Tpo" -c -o pkdgrav2m_mpi-pst.obj `if test -f 'pst.c'; then $(CYGPATH_W) 'pst.c'; else $(CYGPATH_W) '$(srcdir)/pst.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-pst.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-pst.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-pst.Tpo"; exit 1; fi
	source='pst.c' object='pkdgrav2m_mpi-pst.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-pst.obj `if test -f 'pst.c'; then $(CYGPATH_W) 'pst.c'; else $(CYGPATH_W) '$(srcdir)/pst.c'; fi`

pkdgrav2m_mpi-smooth.o: smooth.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-smooth.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-smooth.Tpo" -c -o pkdgrav2m_mpi-smooth.o `test -f 'smooth.c' || echo '$(srcdir)/'`smooth.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-smooth.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-smooth.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-smooth.Tpo"; exit 1; fi
	source='smooth.c' object='pkdgrav2m_mpi-smooth.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-smooth.o `test -f 'smooth.c' || echo '$(srcdir)/'`smooth.c

pkdgrav2m_mpi-smooth.obj: smooth.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-smooth.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-smooth.Tpo" -c -o pkdgrav2m_mpi-smooth.obj `if test -f 'smooth.c'; then $(CYGPATH_W) 'smooth.c'; else $(CYGPATH_W) '$(srcdir)/smooth.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-smooth.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-smooth.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-smooth.Tpo"; exit 1; fi
	source='smooth.c' object='pkdgrav2m_mpi-smooth.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-smooth.obj `if test -f 'smooth.c'; then $(CYGPATH_W) 'smooth.c'; else $(CYGPATH_W) '$(srcdir)/smooth.c'; fi`

pkdgrav2m_mpi-tree.o: tree.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-tree.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-tree.Tpo" -c -o pkdgrav2m_mpi-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-tree.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-tree.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-tree.Tpo"; exit 1; fi
	source='tree.c' object='pkdgrav2m_mpi-tree.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c

pkdgrav2m_mpi-tree.obj: tree.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-tree.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-tree.Tpo" -c -o pkdgrav2m_mpi-tree.obj `if test -f 'tree.c'; then $(CYGPATH_W) 'tree.c'; else $(CYGPATH_W) '$(srcdir)/tree.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-tree.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-tree.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-tree.Tpo"; exit 1; fi
	source='tree.c' object='pkdgrav2m_mpi-tree.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-tree.obj `if test -f 'tree.c'; then $(CYGPATH_W) 'tree.c'; else $(CYGPATH_W) '$(srcdir)/tree.c'; fi`

pkdgrav2m_mpi-ewald.o: ewald.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-ewald.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-ewald.Tpo" -c -o pkdgrav2m_mpi-ewald.o `test -f 'ewald.c' || echo '$(srcdir)/'`ewald.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-ewald.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-ewald.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-ewald.Tpo"; exit 1; fi
	source='ewald.c' object='pkdgrav2m_mpi-ewald.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-ewald.o `test -f 'ewald.c' || echo '$(srcdir)/'`ewald.c

pkdgrav2m_mpi-ewald.obj: ewald.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-ewald.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-ewald.Tpo" -c -o pkdgrav2m_mpi-ewald.obj `if test -f 'ewald.c'; then $(CYGPATH_W) 'ewald.c'; else $(CYGPATH_W) '$(srcdir)/ewald.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-ewald.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-ewald.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-ewald.Tpo"; exit 1; fi
	source='ewald.c' object='pkdgrav2m_mpi-ewald.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-ewald.obj `if test -f 'ewald.c'; then $(CYGPATH_W) 'ewald.c'; else $(CYGPATH_W) '$(srcdir)/ewald.c'; fi`

pkdgrav2m_mpi-main.o: main.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-main.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-main.Tpo" -c -o pkdgrav2m_mpi-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-main.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-main.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-main.Tpo"; exit 1; fi
	source='main.c' object='pkdgrav2m_mpi-main.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

pkdgrav2m_mpi-main.obj: main.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-main.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-main.Tpo" -c -o pkdgrav2m_mpi-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-main.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-main.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-main.Tpo"; exit 1; fi
	source='main.c' object='pkdgrav2m_mpi-main.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

pkdgrav2m_mpi-moments.o: moments.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-moments.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-moments.Tpo" -c -o pkdgrav2m_mpi-moments.o `test -f 'moments.c' || echo '$(srcdir)/'`moments.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-moments.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-moments.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-moments.Tpo"; exit 1; fi
	source='moments.c' object='pkdgrav2m_mpi-moments.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-moments.o `test -f 'moments.c' || echo '$(srcdir)/'`moments.c

pkdgrav2m_mpi-moments.obj: moments.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-moments.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-moments.Tpo" -c -o pkdgrav2m_mpi-moments.obj `if test -f 'moments.c'; then $(CYGPATH_W) 'moments.c'; else $(CYGPATH_W) '$(srcdir)/moments.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-moments.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-moments.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-moments.Tpo"; exit 1; fi
	source='moments.c' object='pkdgrav2m_mpi-moments.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-moments.obj `if test -f 'moments.c'; then $(CYGPATH_W) 'moments.c'; else $(CYGPATH_W) '$(srcdir)/moments.c'; fi`

pkdgrav2m_mpi-outtype.o: outtype.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-outtype.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-outtype.Tpo" -c -o pkdgrav2m_mpi-outtype.o `test -f 'outtype.c' || echo '$(srcdir)/'`outtype.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-outtype.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-outtype.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-outtype.Tpo"; exit 1; fi
	source='outtype.c' object='pkdgrav2m_mpi-outtype.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-outtype.o `test -f 'outtype.c' || echo '$(srcdir)/'`outtype.c

pkdgrav2m_mpi-outtype.obj: outtype.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-outtype.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-outtype.Tpo" -c -o pkdgrav2m_mpi-outtype.obj `if test -f 'outtype.c'; then $(CYGPATH_W) 'outtype.c'; else $(CYGPATH_W) '$(srcdir)/outtype.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-outtype.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-outtype.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-outtype.Tpo"; exit 1; fi
	source='outtype.c' object='pkdgrav2m_mpi-outtype.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-outtype.obj `if test -f 'outtype.c'; then $(CYGPATH_W) 'outtype.c'; else $(CYGPATH_W) '$(srcdir)/outtype.c'; fi`

pkdgrav2m_mpi-pkd.o: pkd.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-pkd.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-pkd.Tpo" -c -o pkdgrav2m_mpi-pkd.o `test -f 'pkd.c' || echo '$(srcdir)/'`pkd.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-pkd.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-pkd.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-pkd.Tpo"; exit 1; fi
	source='pkd.c' object='pkdgrav2m_mpi-pkd.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-pkd.o `test -f 'pkd.c' || echo '$(srcdir)/'`pkd.c

pkdgrav2m_mpi-pkd.obj: pkd.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-pkd.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-pkd.Tpo" -c -o pkdgrav2m_mpi-pkd.obj `if test -f 'pkd.c'; then $(CYGPATH_W) 'pkd.c'; else $(CYGPATH_W) '$(srcdir)/pkd.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-pkd.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-pkd.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-pkd.Tpo"; exit 1; fi
	source='pkd.c' object='pkdgrav2m_mpi-pkd.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-pkd.obj `if test -f 'pkd.c'; then $(CYGPATH_W) 'pkd.c'; else $(CYGPATH_W) '$(srcdir)/pkd.c'; fi`

pkdgrav2m_mpi-romberg.o: romberg.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-romberg.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-romberg.Tpo" -c -o pkdgrav2m_mpi-romberg.o `test -f 'romberg.c' || echo '$(srcdir)/'`romberg.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-romberg.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-romberg.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-romberg.Tpo"; exit 1; fi
	source='romberg.c' object='pkdgrav2m_mpi-romberg.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-romberg.o `test -f 'romberg.c' || echo '$(srcdir)/'`romberg.c

pkdgrav2m_mpi-romberg.obj: romberg.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-romberg.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-romberg.Tpo" -c -o pkdgrav2m_mpi-romberg.obj `if test -f 'romberg.c'; then $(CYGPATH_W) 'romberg.c'; else $(CYGPATH_W) '$(srcdir)/romberg.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-romberg.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-romberg.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-romberg.Tpo"; exit 1; fi
	source='romberg.c' object='pkdgrav2m_mpi-romberg.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-romberg.obj `if test -f 'romberg.c'; then $(CYGPATH_W) 'romberg.c'; else $(CYGPATH_W) '$(srcdir)/romberg.c'; fi`

pkdgrav2m_mpi-smoothfcn.o: smoothfcn.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-smoothfcn.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-smoothfcn.Tpo" -c -o pkdgrav2m_mpi-smoothfcn.o `test -f 'smoothfcn.c' || echo '$(srcdir)/'`smoothfcn.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-smoothfcn.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-smoothfcn.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-smoothfcn.Tpo"; exit 1; fi
	source='smoothfcn.c' object='pkdgrav2m_mpi-smoothfcn.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-smoothfcn.o `test -f 'smoothfcn.c' || echo '$(srcdir)/'`smoothfcn.c

pkdgrav2m_mpi-smoothfcn.obj: smoothfcn.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-smoothfcn.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-smoothfcn.Tpo" -c -o pkdgrav2m_mpi-smoothfcn.obj `if test -f 'smoothfcn.c'; then $(CYGPATH_W) 'smoothfcn.c'; else $(CYGPATH_W) '$(srcdir)/smoothfcn.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-smoothfcn.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-smoothfcn.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-smoothfcn.Tpo"; exit 1; fi
	source='smoothfcn.c' object='pkdgrav2m_mpi-smoothfcn.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-smoothfcn.obj `if test -f 'smoothfcn.c'; then $(CYGPATH_W) 'smoothfcn.c'; else $(CYGPATH_W) '$(srcdir)/smoothfcn.c'; fi`

pkdgrav2m_mpi-grav2.o: ../bsc/grav2.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-grav2.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-grav2.Tpo" -c -o pkdgrav2m_mpi-grav2.o `test -f '../bsc/grav2.c' || echo '$(srcdir)/'`../bsc/grav2.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-grav2.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-grav2.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-grav2.Tpo"; exit 1; fi
	source='../bsc/grav2.c' object='pkdgrav2m_mpi-grav2.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-grav2.o `test -f '../bsc/grav2.c' || echo '$(srcdir)/'`../bsc/grav2.c

pkdgrav2m_mpi-grav2.obj: ../bsc/grav2.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-grav2.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-grav2.Tpo" -c -o pkdgrav2m_mpi-grav2.obj `if test -f '../bsc/grav2.c'; then $(CYGPATH_W) '../bsc/grav2.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/grav2.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-grav2.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-grav2.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-grav2.Tpo"; exit 1; fi
	source='../bsc/grav2.c' object='pkdgrav2m_mpi-grav2.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-grav2.obj `if test -f '../bsc/grav2.c'; then $(CYGPATH_W) '../bsc/grav2.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/grav2.c'; fi`

pkdgrav2m_mpi-walk2.o: ../bsc/walk2.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-walk2.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-walk2.Tpo" -c -o pkdgrav2m_mpi-walk2.o `test -f '../bsc/walk2.c' || echo '$(srcdir)/'`../bsc/walk2.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-walk2.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-walk2.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-walk2.Tpo"; exit 1; fi
	source='../bsc/walk2.c' object='pkdgrav2m_mpi-walk2.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-walk2.o `test -f '../bsc/walk2.c' || echo '$(srcdir)/'`../bsc/walk2.c

pkdgrav2m_mpi-walk2.obj: ../bsc/walk2.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-walk2.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-walk2.Tpo" -c -o pkdgrav2m_mpi-walk2.obj `if test -f '../bsc/walk2.c'; then $(CYGPATH_W) '../bsc/walk2.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/walk2.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-walk2.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-walk2.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-walk2.Tpo"; exit 1; fi
	source='../bsc/walk2.c' object='pkdgrav2m_mpi-walk2.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-walk2.obj `if test -f '../bsc/walk2.c'; then $(CYGPATH_W) '../bsc/walk2.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/walk2.c'; fi`

pkdgrav2m_mpi-momGenLocrAddSIMDMomr.o: ../bsc/momGenLocrAddSIMDMomr.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-momGenLocrAddSIMDMomr.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-momGenLocrAddSIMDMomr.Tpo" -c -o pkdgrav2m_mpi-momGenLocrAddSIMDMomr.o `test -f '../bsc/momGenLocrAddSIMDMomr.c' || echo '$(srcdir)/'`../bsc/momGenLocrAddSIMDMomr.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-momGenLocrAddSIMDMomr.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-momGenLocrAddSIMDMomr.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-momGenLocrAddSIMDMomr.Tpo"; exit 1; fi
	source='../bsc/momGenLocrAddSIMDMomr.c' object='pkdgrav2m_mpi-momGenLocrAddSIMDMomr.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-momGenLocrAddSIMDMomr.o `test -f '../bsc/momGenLocrAddSIMDMomr.c' || echo '$(srcdir)/'`../bsc/momGenLocrAddSIMDMomr.c

pkdgrav2m_mpi-momGenLocrAddSIMDMomr.obj: ../bsc/momGenLocrAddSIMDMomr.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-momGenLocrAddSIMDMomr.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-momGenLocrAddSIMDMomr.Tpo" -c -o pkdgrav2m_mpi-momGenLocrAddSIMDMomr.obj `if test -f '../bsc/momGenLocrAddSIMDMomr.c'; then $(CYGPATH_W) '../bsc/momGenLocrAddSIMDMomr.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/momGenLocrAddSIMDMomr.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-momGenLocrAddSIMDMomr.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-momGenLocrAddSIMDMomr.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-momGenLocrAddSIMDMomr.Tpo"; exit 1; fi
	source='../bsc/momGenLocrAddSIMDMomr.c' object='pkdgrav2m_mpi-momGenLocrAddSIMDMomr.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-momGenLocrAddSIMDMomr.obj `if test -f '../bsc/momGenLocrAddSIMDMomr.c'; then $(CYGPATH_W) '../bsc/momGenLocrAddSIMDMomr.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/momGenLocrAddSIMDMomr.c'; fi`

pkdgrav2m_mpi-grav.o: grav.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-grav.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-grav.Tpo" -c -o pkdgrav2m_mpi-grav.o `test -f 'grav.c' || echo '$(srcdir)/'`grav.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-grav.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-grav.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-grav.Tpo"; exit 1; fi
	source='grav.c' object='pkdgrav2m_mpi-grav.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-grav.o `test -f 'grav.c' || echo '$(srcdir)/'`grav.c

pkdgrav2m_mpi-grav.obj: grav.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-grav.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-grav.Tpo" -c -o pkdgrav2m_mpi-grav.obj `if test -f 'grav.c'; then $(CYGPATH_W) 'grav.c'; else $(CYGPATH_W) '$(srcdir)/grav.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-grav.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-grav.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-grav.Tpo"; exit 1; fi
	source='grav.c' object='pkdgrav2m_mpi-grav.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-grav.obj `if test -f 'grav.c'; then $(CYGPATH_W) 'grav.c'; else $(CYGPATH_W) '$(srcdir)/grav.c'; fi`

pkdgrav2m_mpi-walk.o: walk.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-walk.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-walk.Tpo" -c -o pkdgrav2m_mpi-walk.o `test -f 'walk.c' || echo '$(srcdir)/'`walk.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-walk.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-walk.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-walk.Tpo"; exit 1; fi
	source='walk.c' object='pkdgrav2m_mpi-walk.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-walk.o `test -f 'walk.c' || echo '$(srcdir)/'`walk.c

pkdgrav2m_mpi-walk.obj: walk.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-walk.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-walk.Tpo" -c -o pkdgrav2m_mpi-walk.obj `if test -f 'walk.c'; then $(CYGPATH_W) 'walk.c'; else $(CYGPATH_W) '$(srcdir)/walk.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-walk.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-walk.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-walk.Tpo"; exit 1; fi
	source='walk.c' object='pkdgrav2m_mpi-walk.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-walk.obj `if test -f 'walk.c'; then $(CYGPATH_W) 'walk.c'; else $(CYGPATH_W) '$(srcdir)/walk.c'; fi`

pkdgrav2m_mpi-io.o: io.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-io.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-io.Tpo" -c -o pkdgrav2m_mpi-io.o `test -f 'io.c' || echo '$(srcdir)/'`io.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-io.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-io.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-io.Tpo"; exit 1; fi
	source='io.c' object='pkdgrav2m_mpi-io.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-io.o `test -f 'io.c' || echo '$(srcdir)/'`io.c

pkdgrav2m_mpi-io.obj: io.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-io.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-io.Tpo" -c -o pkdgrav2m_mpi-io.obj `if test -f 'io.c'; then $(CYGPATH_W) 'io.c'; else $(CYGPATH_W) '$(srcdir)/io.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-io.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-io.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-io.Tpo"; exit 1; fi
	source='io.c' object='pkdgrav2m_mpi-io.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-io.obj `if test -f 'io.c'; then $(CYGPATH_W) 'io.c'; else $(CYGPATH_W) '$(srcdir)/io.c'; fi`

pkdgrav2m_mpi-mdl.o: $(MDL)/mpi/mdl.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-mdl.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-mdl.Tpo" -c -o pkdgrav2m_mpi-mdl.o `test -f '$(MDL)/mpi/mdl.c' || echo '$(srcdir)/'`$(MDL)/mpi/mdl.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-mdl.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-mdl.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-mdl.Tpo"; exit 1; fi
	source='$(MDL)/mpi/mdl.c' object='pkdgrav2m_mpi-mdl.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-mdl.o `test -f '$(MDL)/mpi/mdl.c' || echo '$(srcdir)/'`$(MDL)/mpi/mdl.c

pkdgrav2m_mpi-mdl.obj: $(MDL)/mpi/mdl.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -MT pkdgrav2m_mpi-mdl.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_mpi-mdl.Tpo" -c -o pkdgrav2m_mpi-mdl.obj `if test -f '$(MDL)/mpi/mdl.c'; then $(CYGPATH_W) '$(MDL)/mpi/mdl.c'; else $(CYGPATH_W) '$(srcdir)/$(MDL)/mpi/mdl.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_mpi-mdl.Tpo" "$(DEPDIR)/pkdgrav2m_mpi-mdl.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_mpi-mdl.Tpo"; exit 1; fi
	source='$(MDL)/mpi/mdl.c' object='pkdgrav2m_mpi-mdl.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_mpi_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_mpi-mdl.obj `if test -f '$(MDL)/mpi/mdl.c'; then $(CYGPATH_W) '$(MDL)/mpi/mdl.c'; else $(CYGPATH_W) '$(srcdir)/$(MDL)/mpi/mdl.c'; fi`

pkdgrav2m_pthread-cosmo.o: cosmo.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-cosmo.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-cosmo.Tpo" -c -o pkdgrav2m_pthread-cosmo.o `test -f 'cosmo.c' || echo '$(srcdir)/'`cosmo.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-cosmo.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-cosmo.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-cosmo.Tpo"; exit 1; fi
	source='cosmo.c' object='pkdgrav2m_pthread-cosmo.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-cosmo.o `test -f 'cosmo.c' || echo '$(srcdir)/'`cosmo.c

pkdgrav2m_pthread-cosmo.obj: cosmo.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-cosmo.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-cosmo.Tpo" -c -o pkdgrav2m_pthread-cosmo.obj `if test -f 'cosmo.c'; then $(CYGPATH_W) 'cosmo.c'; else $(CYGPATH_W) '$(srcdir)/cosmo.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-cosmo.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-cosmo.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-cosmo.Tpo"; exit 1; fi
	source='cosmo.c' object='pkdgrav2m_pthread-cosmo.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-cosmo.obj `if test -f 'cosmo.c'; then $(CYGPATH_W) 'cosmo.c'; else $(CYGPATH_W) '$(srcdir)/cosmo.c'; fi`

pkdgrav2m_pthread-master.o: master.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-master.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-master.Tpo" -c -o pkdgrav2m_pthread-master.o `test -f 'master.c' || echo '$(srcdir)/'`master.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-master.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-master.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-master.Tpo"; exit 1; fi
	source='master.c' object='pkdgrav2m_pthread-master.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-master.o `test -f 'master.c' || echo '$(srcdir)/'`master.c

pkdgrav2m_pthread-master.obj: master.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-master.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-master.Tpo" -c -o pkdgrav2m_pthread-master.obj `if test -f 'master.c'; then $(CYGPATH_W) 'master.c'; else $(CYGPATH_W) '$(srcdir)/master.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-master.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-master.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-master.Tpo"; exit 1; fi
	source='master.c' object='pkdgrav2m_pthread-master.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-master.obj `if test -f 'master.c'; then $(CYGPATH_W) 'master.c'; else $(CYGPATH_W) '$(srcdir)/master.c'; fi`

pkdgrav2m_pthread-param.o: param.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-param.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-param.Tpo" -c -o pkdgrav2m_pthread-param.o `test -f 'param.c' || echo '$(srcdir)/'`param.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-param.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-param.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-param.Tpo"; exit 1; fi
	source='param.c' object='pkdgrav2m_pthread-param.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-param.o `test -f 'param.c' || echo '$(srcdir)/'`param.c

pkdgrav2m_pthread-param.obj: param.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-param.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-param.Tpo" -c -o pkdgrav2m_pthread-param.obj `if test -f 'param.c'; then $(CYGPATH_W) 'param.c'; else $(CYGPATH_W) '$(srcdir)/param.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-param.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-param.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-param.Tpo"; exit 1; fi
	source='param.c' object='pkdgrav2m_pthread-param.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-param.obj `if test -f 'param.c'; then $(CYGPATH_W) 'param.c'; else $(CYGPATH_W) '$(srcdir)/param.c'; fi`

pkdgrav2m_pthread-pst.o: pst.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-pst.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-pst.Tpo" -c -o pkdgrav2m_pthread-pst.o `test -f 'pst.c' || echo '$(srcdir)/'`pst.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-pst.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-pst.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-pst.Tpo"; exit 1; fi
	source='pst.c' object='pkdgrav2m_pthread-pst.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-pst.o `test -f 'pst.c' || echo '$(srcdir)/'`pst.c

pkdgrav2m_pthread-pst.obj: pst.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-pst.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-pst.Tpo" -c -o pkdgrav2m_pthread-pst.obj `if test -f 'pst.c'; then $(CYGPATH_W) 'pst.c'; else $(CYGPATH_W) '$(srcdir)/pst.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-pst.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-pst.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-pst.Tpo"; exit 1; fi
	source='pst.c' object='pkdgrav2m_pthread-pst.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-pst.obj `if test -f 'pst.c'; then $(CYGPATH_W) 'pst.c'; else $(CYGPATH_W) '$(srcdir)/pst.c'; fi`

pkdgrav2m_pthread-smooth.o: smooth.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-smooth.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-smooth.Tpo" -c -o pkdgrav2m_pthread-smooth.o `test -f 'smooth.c' || echo '$(srcdir)/'`smooth.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-smooth.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-smooth.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-smooth.Tpo"; exit 1; fi
	source='smooth.c' object='pkdgrav2m_pthread-smooth.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-smooth.o `test -f 'smooth.c' || echo '$(srcdir)/'`smooth.c

pkdgrav2m_pthread-smooth.obj: smooth.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-smooth.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-smooth.Tpo" -c -o pkdgrav2m_pthread-smooth.obj `if test -f 'smooth.c'; then $(CYGPATH_W) 'smooth.c'; else $(CYGPATH_W) '$(srcdir)/smooth.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-smooth.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-smooth.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-smooth.Tpo"; exit 1; fi
	source='smooth.c' object='pkdgrav2m_pthread-smooth.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-smooth.obj `if test -f 'smooth.c'; then $(CYGPATH_W) 'smooth.c'; else $(CYGPATH_W) '$(srcdir)/smooth.c'; fi`

pkdgrav2m_pthread-tree.o: tree.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-tree.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-tree.Tpo" -c -o pkdgrav2m_pthread-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-tree.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-tree.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-tree.Tpo"; exit 1; fi
	source='tree.c' object='pkdgrav2m_pthread-tree.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c

pkdgrav2m_pthread-tree.obj: tree.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-tree.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-tree.Tpo" -c -o pkdgrav2m_pthread-tree.obj `if test -f 'tree.c'; then $(CYGPATH_W) 'tree.c'; else $(CYGPATH_W) '$(srcdir)/tree.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-tree.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-tree.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-tree.Tpo"; exit 1; fi
	source='tree.c' object='pkdgrav2m_pthread-tree.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-tree.obj `if test -f 'tree.c'; then $(CYGPATH_W) 'tree.c'; else $(CYGPATH_W) '$(srcdir)/tree.c'; fi`

pkdgrav2m_pthread-ewald.o: ewald.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-ewald.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-ewald.Tpo" -c -o pkdgrav2m_pthread-ewald.o `test -f 'ewald.c' || echo '$(srcdir)/'`ewald.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-ewald.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-ewald.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-ewald.Tpo"; exit 1; fi
	source='ewald.c' object='pkdgrav2m_pthread-ewald.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-ewald.o `test -f 'ewald.c' || echo '$(srcdir)/'`ewald.c

pkdgrav2m_pthread-ewald.obj: ewald.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-ewald.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-ewald.Tpo" -c -o pkdgrav2m_pthread-ewald.obj `if test -f 'ewald.c'; then $(CYGPATH_W) 'ewald.c'; else $(CYGPATH_W) '$(srcdir)/ewald.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-ewald.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-ewald.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-ewald.Tpo"; exit 1; fi
	source='ewald.c' object='pkdgrav2m_pthread-ewald.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-ewald.obj `if test -f 'ewald.c'; then $(CYGPATH_W) 'ewald.c'; else $(CYGPATH_W) '$(srcdir)/ewald.c'; fi`

pkdgrav2m_pthread-main.o: main.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-main.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-main.Tpo" -c -o pkdgrav2m_pthread-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-main.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-main.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-main.Tpo"; exit 1; fi
	source='main.c' object='pkdgrav2m_pthread-main.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

pkdgrav2m_pthread-main.obj: main.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-main.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-main.Tpo" -c -o pkdgrav2m_pthread-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-main.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-main.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-main.Tpo"; exit 1; fi
	source='main.c' object='pkdgrav2m_pthread-main.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

pkdgrav2m_pthread-moments.o: moments.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-moments.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-moments.Tpo" -c -o pkdgrav2m_pthread-moments.o `test -f 'moments.c' || echo '$(srcdir)/'`moments.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-moments.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-moments.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-moments.Tpo"; exit 1; fi
	source='moments.c' object='pkdgrav2m_pthread-moments.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-moments.o `test -f 'moments.c' || echo '$(srcdir)/'`moments.c

pkdgrav2m_pthread-moments.obj: moments.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-moments.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-moments.Tpo" -c -o pkdgrav2m_pthread-moments.obj `if test -f 'moments.c'; then $(CYGPATH_W) 'moments.c'; else $(CYGPATH_W) '$(srcdir)/moments.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-moments.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-moments.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-moments.Tpo"; exit 1; fi
	source='moments.c' object='pkdgrav2m_pthread-moments.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-moments.obj `if test -f 'moments.c'; then $(CYGPATH_W) 'moments.c'; else $(CYGPATH_W) '$(srcdir)/moments.c'; fi`

pkdgrav2m_pthread-outtype.o: outtype.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-outtype.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-outtype.Tpo" -c -o pkdgrav2m_pthread-outtype.o `test -f 'outtype.c' || echo '$(srcdir)/'`outtype.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-outtype.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-outtype.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-outtype.Tpo"; exit 1; fi
	source='outtype.c' object='pkdgrav2m_pthread-outtype.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-outtype.o `test -f 'outtype.c' || echo '$(srcdir)/'`outtype.c

pkdgrav2m_pthread-outtype.obj: outtype.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-outtype.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-outtype.Tpo" -c -o pkdgrav2m_pthread-outtype.obj `if test -f 'outtype.c'; then $(CYGPATH_W) 'outtype.c'; else $(CYGPATH_W) '$(srcdir)/outtype.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-outtype.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-outtype.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-outtype.Tpo"; exit 1; fi
	source='outtype.c' object='pkdgrav2m_pthread-outtype.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-outtype.obj `if test -f 'outtype.c'; then $(CYGPATH_W) 'outtype.c'; else $(CYGPATH_W) '$(srcdir)/outtype.c'; fi`

pkdgrav2m_pthread-pkd.o: pkd.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-pkd.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-pkd.Tpo" -c -o pkdgrav2m_pthread-pkd.o `test -f 'pkd.c' || echo '$(srcdir)/'`pkd.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-pkd.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-pkd.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-pkd.Tpo"; exit 1; fi
	source='pkd.c' object='pkdgrav2m_pthread-pkd.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-pkd.o `test -f 'pkd.c' || echo '$(srcdir)/'`pkd.c

pkdgrav2m_pthread-pkd.obj: pkd.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-pkd.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-pkd.Tpo" -c -o pkdgrav2m_pthread-pkd.obj `if test -f 'pkd.c'; then $(CYGPATH_W) 'pkd.c'; else $(CYGPATH_W) '$(srcdir)/pkd.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-pkd.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-pkd.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-pkd.Tpo"; exit 1; fi
	source='pkd.c' object='pkdgrav2m_pthread-pkd.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-pkd.obj `if test -f 'pkd.c'; then $(CYGPATH_W) 'pkd.c'; else $(CYGPATH_W) '$(srcdir)/pkd.c'; fi`

pkdgrav2m_pthread-romberg.o: romberg.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-romberg.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-romberg.Tpo" -c -o pkdgrav2m_pthread-romberg.o `test -f 'romberg.c' || echo '$(srcdir)/'`romberg.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-romberg.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-romberg.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-romberg.Tpo"; exit 1; fi
	source='romberg.c' object='pkdgrav2m_pthread-romberg.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-romberg.o `test -f 'romberg.c' || echo '$(srcdir)/'`romberg.c

pkdgrav2m_pthread-romberg.obj: romberg.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-romberg.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-romberg.Tpo" -c -o pkdgrav2m_pthread-romberg.obj `if test -f 'romberg.c'; then $(CYGPATH_W) 'romberg.c'; else $(CYGPATH_W) '$(srcdir)/romberg.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-romberg.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-romberg.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-romberg.Tpo"; exit 1; fi
	source='romberg.c' object='pkdgrav2m_pthread-romberg.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-romberg.obj `if test -f 'romberg.c'; then $(CYGPATH_W) 'romberg.c'; else $(CYGPATH_W) '$(srcdir)/romberg.c'; fi`

pkdgrav2m_pthread-smoothfcn.o: smoothfcn.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-smoothfcn.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-smoothfcn.Tpo" -c -o pkdgrav2m_pthread-smoothfcn.o `test -f 'smoothfcn.c' || echo '$(srcdir)/'`smoothfcn.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-smoothfcn.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-smoothfcn.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-smoothfcn.Tpo"; exit 1; fi
	source='smoothfcn.c' object='pkdgrav2m_pthread-smoothfcn.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-smoothfcn.o `test -f 'smoothfcn.c' || echo '$(srcdir)/'`smoothfcn.c

pkdgrav2m_pthread-smoothfcn.obj: smoothfcn.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-smoothfcn.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-smoothfcn.Tpo" -c -o pkdgrav2m_pthread-smoothfcn.obj `if test -f 'smoothfcn.c'; then $(CYGPATH_W) 'smoothfcn.c'; else $(CYGPATH_W) '$(srcdir)/smoothfcn.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-smoothfcn.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-smoothfcn.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-smoothfcn.Tpo"; exit 1; fi
	source='smoothfcn.c' object='pkdgrav2m_pthread-smoothfcn.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-smoothfcn.obj `if test -f 'smoothfcn.c'; then $(CYGPATH_W) 'smoothfcn.c'; else $(CYGPATH_W) '$(srcdir)/smoothfcn.c'; fi`

pkdgrav2m_pthread-grav2.o: ../bsc/grav2.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-grav2.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-grav2.Tpo" -c -o pkdgrav2m_pthread-grav2.o `test -f '../bsc/grav2.c' || echo '$(srcdir)/'`../bsc/grav2.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-grav2.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-grav2.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-grav2.Tpo"; exit 1; fi
	source='../bsc/grav2.c' object='pkdgrav2m_pthread-grav2.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-grav2.o `test -f '../bsc/grav2.c' || echo '$(srcdir)/'`../bsc/grav2.c

pkdgrav2m_pthread-grav2.obj: ../bsc/grav2.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-grav2.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-grav2.Tpo" -c -o pkdgrav2m_pthread-grav2.obj `if test -f '../bsc/grav2.c'; then $(CYGPATH_W) '../bsc/grav2.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/grav2.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-grav2.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-grav2.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-grav2.Tpo"; exit 1; fi
	source='../bsc/grav2.c' object='pkdgrav2m_pthread-grav2.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-grav2.obj `if test -f '../bsc/grav2.c'; then $(CYGPATH_W) '../bsc/grav2.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/grav2.c'; fi`

pkdgrav2m_pthread-walk2.o: ../bsc/walk2.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-walk2.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-walk2.Tpo" -c -o pkdgrav2m_pthread-walk2.o `test -f '../bsc/walk2.c' || echo '$(srcdir)/'`../bsc/walk2.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-walk2.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-walk2.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-walk2.Tpo"; exit 1; fi
	source='../bsc/walk2.c' object='pkdgrav2m_pthread-walk2.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-walk2.o `test -f '../bsc/walk2.c' || echo '$(srcdir)/'`../bsc/walk2.c

pkdgrav2m_pthread-walk2.obj: ../bsc/walk2.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-walk2.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-walk2.Tpo" -c -o pkdgrav2m_pthread-walk2.obj `if test -f '../bsc/walk2.c'; then $(CYGPATH_W) '../bsc/walk2.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/walk2.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-walk2.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-walk2.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-walk2.Tpo"; exit 1; fi
	source='../bsc/walk2.c' object='pkdgrav2m_pthread-walk2.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-walk2.obj `if test -f '../bsc/walk2.c'; then $(CYGPATH_W) '../bsc/walk2.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/walk2.c'; fi`

pkdgrav2m_pthread-momGenLocrAddSIMDMomr.o: ../bsc/momGenLocrAddSIMDMomr.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-momGenLocrAddSIMDMomr.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-momGenLocrAddSIMDMomr.Tpo" -c -o pkdgrav2m_pthread-momGenLocrAddSIMDMomr.o `test -f '../bsc/momGenLocrAddSIMDMomr.c' || echo '$(srcdir)/'`../bsc/momGenLocrAddSIMDMomr.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-momGenLocrAddSIMDMomr.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-momGenLocrAddSIMDMomr.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-momGenLocrAddSIMDMomr.Tpo"; exit 1; fi
	source='../bsc/momGenLocrAddSIMDMomr.c' object='pkdgrav2m_pthread-momGenLocrAddSIMDMomr.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-momGenLocrAddSIMDMomr.o `test -f '../bsc/momGenLocrAddSIMDMomr.c' || echo '$(srcdir)/'`../bsc/momGenLocrAddSIMDMomr.c

pkdgrav2m_pthread-momGenLocrAddSIMDMomr.obj: ../bsc/momGenLocrAddSIMDMomr.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-momGenLocrAddSIMDMomr.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-momGenLocrAddSIMDMomr.Tpo" -c -o pkdgrav2m_pthread-momGenLocrAddSIMDMomr.obj `if test -f '../bsc/momGenLocrAddSIMDMomr.c'; then $(CYGPATH_W) '../bsc/momGenLocrAddSIMDMomr.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/momGenLocrAddSIMDMomr.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-momGenLocrAddSIMDMomr.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-momGenLocrAddSIMDMomr.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-momGenLocrAddSIMDMomr.Tpo"; exit 1; fi
	source='../bsc/momGenLocrAddSIMDMomr.c' object='pkdgrav2m_pthread-momGenLocrAddSIMDMomr.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-momGenLocrAddSIMDMomr.obj `if test -f '../bsc/momGenLocrAddSIMDMomr.c'; then $(CYGPATH_W) '../bsc/momGenLocrAddSIMDMomr.c'; else $(CYGPATH_W) '$(srcdir)/../bsc/momGenLocrAddSIMDMomr.c'; fi`

pkdgrav2m_pthread-grav.o: grav.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-grav.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-grav.Tpo" -c -o pkdgrav2m_pthread-grav.o `test -f 'grav.c' || echo '$(srcdir)/'`grav.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-grav.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-grav.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-grav.Tpo"; exit 1; fi
	source='grav.c' object='pkdgrav2m_pthread-grav.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-grav.o `test -f 'grav.c' || echo '$(srcdir)/'`grav.c

pkdgrav2m_pthread-grav.obj: grav.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-grav.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-grav.Tpo" -c -o pkdgrav2m_pthread-grav.obj `if test -f 'grav.c'; then $(CYGPATH_W) 'grav.c'; else $(CYGPATH_W) '$(srcdir)/grav.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-grav.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-grav.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-grav.Tpo"; exit 1; fi
	source='grav.c' object='pkdgrav2m_pthread-grav.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-grav.obj `if test -f 'grav.c'; then $(CYGPATH_W) 'grav.c'; else $(CYGPATH_W) '$(srcdir)/grav.c'; fi`

pkdgrav2m_pthread-walk.o: walk.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-walk.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-walk.Tpo" -c -o pkdgrav2m_pthread-walk.o `test -f 'walk.c' || echo '$(srcdir)/'`walk.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-walk.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-walk.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-walk.Tpo"; exit 1; fi
	source='walk.c' object='pkdgrav2m_pthread-walk.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-walk.o `test -f 'walk.c' || echo '$(srcdir)/'`walk.c

pkdgrav2m_pthread-walk.obj: walk.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-walk.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-walk.Tpo" -c -o pkdgrav2m_pthread-walk.obj `if test -f 'walk.c'; then $(CYGPATH_W) 'walk.c'; else $(CYGPATH_W) '$(srcdir)/walk.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-walk.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-walk.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-walk.Tpo"; exit 1; fi
	source='walk.c' object='pkdgrav2m_pthread-walk.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-walk.obj `if test -f 'walk.c'; then $(CYGPATH_W) 'walk.c'; else $(CYGPATH_W) '$(srcdir)/walk.c'; fi`

pkdgrav2m_pthread-io.o: io.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-io.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-io.Tpo" -c -o pkdgrav2m_pthread-io.o `test -f 'io.c' || echo '$(srcdir)/'`io.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-io.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-io.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-io.Tpo"; exit 1; fi
	source='io.c' object='pkdgrav2m_pthread-io.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-io.o `test -f 'io.c' || echo '$(srcdir)/'`io.c

pkdgrav2m_pthread-io.obj: io.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-io.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-io.Tpo" -c -o pkdgrav2m_pthread-io.obj `if test -f 'io.c'; then $(CYGPATH_W) 'io.c'; else $(CYGPATH_W) '$(srcdir)/io.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-io.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-io.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-io.Tpo"; exit 1; fi
	source='io.c' object='pkdgrav2m_pthread-io.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-io.obj `if test -f 'io.c'; then $(CYGPATH_W) 'io.c'; else $(CYGPATH_W) '$(srcdir)/io.c'; fi`

pkdgrav2m_pthread-mdl.o: $(MDL)/pthread/mdl.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-mdl.o -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-mdl.Tpo" -c -o pkdgrav2m_pthread-mdl.o `test -f '$(MDL)/pthread/mdl.c' || echo '$(srcdir)/'`$(MDL)/pthread/mdl.c; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-mdl.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-mdl.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-mdl.Tpo"; exit 1; fi
	source='$(MDL)/pthread/mdl.c' object='pkdgrav2m_pthread-mdl.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-mdl.o `test -f '$(MDL)/pthread/mdl.c' || echo '$(srcdir)/'`$(MDL)/pthread/mdl.c

pkdgrav2m_pthread-mdl.obj: $(MDL)/pthread/mdl.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -MT pkdgrav2m_pthread-mdl.obj -MD -MP -MF "$(DEPDIR)/pkdgrav2m_pthread-mdl.Tpo" -c -o pkdgrav2m_pthread-mdl.obj `if test -f '$(MDL)/pthread/mdl.c'; then $(CYGPATH_W) '$(MDL)/pthread/mdl.c'; else $(CYGPATH_W) '$(srcdir)/$(MDL)/pthread/mdl.c'; fi`; \
#	then mv -f "$(DEPDIR)/pkdgrav2m_pthread-mdl.Tpo" "$(DEPDIR)/pkdgrav2m_pthread-mdl.Po"; else rm -f "$(DEPDIR)/pkdgrav2m_pthread-mdl.Tpo"; exit 1; fi
	source='$(MDL)/pthread/mdl.c' object='pkdgrav2m_pthread-mdl.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkdgrav2m_pthread_CFLAGS) $(CFLAGS) -c -o pkdgrav2m_pthread-mdl.obj `if test -f '$(MDL)/pthread/mdl.c'; then $(CYGPATH_W) '$(MDL)/pthread/mdl.c'; else $(CYGPATH_W) '$(srcdir)/$(MDL)/pthread/mdl.c'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic ctags dist dist-all dist-bzip2 \
	dist-gzip dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am


# Pseudo targets for 'make pthread' and 'make mpi'
pthread		: pkdgrav2m_pthread
mpi		: pkdgrav2m_mpi
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
