#ifndef _SRC_OPA_CONFIG_H
#define _SRC_OPA_CONFIG_H 1
 
/* define to 1 if we have support for gcc ARM atomics */
#cmakedefine OPA_HAVE_GCC_AND_ARM_ASM 1

/* define to 1 if we have support for gcc ia64 primitives */
#cmakedefine OPA_HAVE_GCC_AND_IA64_ASM 1

/* define to 1 if we have support for gcc PowerPC atomics */
#cmakedefine OPA_HAVE_GCC_AND_POWERPC_ASM 1

/* define to 1 if we have support for gcc SiCortex atomics */
#cmakedefine OPA_HAVE_GCC_AND_SICORTEX_ASM 1

/* Define if GNU __attribute__ is supported */
#cmakedefine OPA_HAVE_GCC_ATTRIBUTE  1 

/* define to 1 if we have support for gcc atomic intrinsics */
#cmakedefine OPA_HAVE_GCC_INTRINSIC_ATOMICS  1 

/* define to 1 if we have support for gcc x86/x86_64 primitives */
#cmakedefine OPA_HAVE_GCC_X86_32_64  1 

/* define to 1 if we have support for gcc x86 primitives for pre-Pentium 4 */
#cmakedefine OPA_HAVE_GCC_X86_32_64_P3  1 

/* define to 1 if we have support for Windows NT atomic intrinsics */
#cmakedefine OPA_HAVE_NT_INTRINSICS 1

/* Define to 1 if you have the <pthread.h> header file. */
#cmakedefine OPA_HAVE_PTHREAD_H  1 

/* Define to 1 if you have the `sched_yield' function. */
#cmakedefine OPA_HAVE_SCHED_YIELD  1 

/* Define to 1 if you have the <stddef.h> header file. */
#cmakedefine OPA_HAVE_STDDEF_H  1 

/* define to 1 if we have support for Sun atomic operations library */
#cmakedefine OPA_HAVE_SUN_ATOMIC_OPS 1

/* The size of `int', as computed by sizeof. */
#cmakedefine OPA_SIZEOF_INT  4 

/* The size of `void *', as computed by sizeof. */
#define OPA_SIZEOF_VOID_P  ${CMAKE_SIZEOF_VOID_P}

/* define to 1 to force using lock-based atomic primitives */
#cmakedefine OPA_USE_LOCK_BASED_PRIMITIVES 1

/* define to 1 if unsafe (non-atomic) primitives should be used */
#cmakedefine OPA_USE_UNSAFE_PRIMITIVES 1

/* Define to the equivalent of the C99 'restrict' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported directly.  */
#ifndef _opa_restrict 
#define _opa_restrict  __restrict 
#endif

/* once: _SRC_OPA_CONFIG_H */
#endif
