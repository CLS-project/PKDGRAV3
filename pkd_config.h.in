#ifdef NDEBUG /* Better would be to fix up the assert framework, */
#undef NDEBUG /* but for now it would just cause too many problems. */
#endif

#ifdef _MSC_VER
#define NOMINMAX
#include <windows.h>
#endif

#cmakedefine HAVE_MALLOC_H 1
#cmakedefine HAVE_SIGNAL_H 1
#cmakedefine HAVE_SYS_TIME_H 1
#cmakedefine HAVE_SYS_STAT_H 1
#cmakedefine HAVE_SYS_PARAM_H 1
#cmakedefine HAVE_UNISTD_H 1
#cmakedefine HAVE_INTTYPES_H 1

#cmakedefine HAVE_FLOOR 1
#cmakedefine HAVE_POW 1
#cmakedefine HAVE_SQRT 1
#cmakedefine HAVE_STRCHR 1
#cmakedefine HAVE_STRRCHR 1
#cmakedefine HAVE_STRDUP 1
#cmakedefine HAVE_STRSTR 1
#cmakedefine HAVE_MEMMOVE 1
#cmakedefine HAVE_MEMSET 1
#cmakedefine HAVE_GETTIMEOFDAY 1
#cmakedefine HAVE_WORDEXP 1
#cmakedefine HAVE_WORDFREE 1
#cmakedefine HAVE_GLOB 1
#cmakedefine HAVE_GLOBFREE 1
#cmakedefine HAVE_GETHOSTNAME 1
#cmakedefine HAVE_GETPAGESIZE 1
#cmakedefine HAVE_MKDIR 1
#cmakedefine HAVE_STRVERSCMP 1
#cmakedefine HAVE_ATEXIT 1
#cmakedefine HAVE_POSIX_MEMALIGN 1

#cmakedefine USE_BT 1
#cmakedefine _GNU_SOURCE 1
#cmakedefine USE_CUDA 1
#cmakedefine USE_HDF5 1
#cmakedefine USE_PYTHON 1
#cmakedefine INTEGER_POSITION 1
#cmakedefine HAVE_LIBAIO 1
#cmakedefine HAVE_AIO_H 1
#cmakedefine POTENTIAL_IN_LIGHTCONE

#define USE_SIMD 1
#define USE_SIMD_OPEN 1
#define USE_SIMD_FMM 1
#define USE_SIMD_LC 1
#define USE_SIMD_EWALD 1
#define USE_SIMD_PP 1
#define USE_SIMD_PC 1
#define NAIVE_DOMAIN_DECOMP 1

#define PACKAGE_VERSION "@PROJECT_VERSION@"
#define PACKAGE_STRING "@PROJECT_NAME@ @PROJECT_VERSION@"
#define FLOAT_MAXVAL HUGE_VAL
